/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserInterface.Main;

import Business.DB4OUtil.DB4OUtil;
import BusinessReliefPortal.Business.Business;
import BusinessReliefPortal.Lender.Lender;
import BusinessReliefPortal.BusinessReliefSystem;
import BusinessReliefPortal.Employee.Employee;
import BusinessReliefPortal.Enterprise.BusinessEnterprise;
import BusinessReliefPortal.Enterprise.CustomerSupportEnterprise;
import BusinessReliefPortal.Enterprise.Enterprise;
import BusinessReliefPortal.Enterprise.FundManagementEnterprise;
import BusinessReliefPortal.Enterprise.ProposalManagementEnterprise;
import BusinessReliefPortal.Enterprise.UserAndVerificationEnterprise;
import BusinessReliefPortal.Network.Network;
import BusinessReliefPortal.Organization.Organization;
import BusinessReliefPortal.Organization.QueryResolutionOrg;
import BusinessReliefPortal.UserAccount.UserAccount;
import BusinessReliefPortal.WorkRequest.WorkRequest;
import static UserInterface.Main.LoginPage.system;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ishitajanwale
 */
public class LenderPage extends javax.swing.JFrame {

    BusinessReliefPortal.BusinessReliefSystem system;

    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    static String lenderID;

    /**
     * Creates new form LenderPage
     */
    public LenderPage(String lenderid) {
        initComponents();
        lenderID = lenderid;
        system = LoginPage.system;
        txtFundingAmt.setText("0");
        txtLenderName.setText(lenderid);
        BusinessEnterprise busEnt = new BusinessEnterprise();
//        
//        dB4OUtil.storeSystem(system);
        txtBusinessId.setText(String.valueOf(busEnt.getLatestBusinessID()));

        popLenderDetails();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        LenderPane = new javax.swing.JTabbedPane();
        paneBusinessDetails = new javax.swing.JPanel();
        lblBusID = new javax.swing.JLabel();
        txtBusinessId = new javax.swing.JTextField();
        txtBusinessName = new javax.swing.JTextField();
        lblBusName = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtBusinessDes = new javax.swing.JTextField();
        lblBusOrgType = new javax.swing.JLabel();
        txtBusinessOrgType = new javax.swing.JTextField();
        btnAddBusPrivateOrg = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtLenderName = new javax.swing.JTextField();
        AddDetailsPane = new javax.swing.JPanel();
        lblTotalRevenue = new javax.swing.JLabel();
        lblIncomeTaxamt = new javax.swing.JLabel();
        lblInterestRate = new javax.swing.JLabel();
        lblInterestStartYears = new javax.swing.JLabel();
        lblBusiness = new javax.swing.JLabel();
        lblFundingAmt = new javax.swing.JLabel();
        txtTotalRevenue = new javax.swing.JTextField();
        txtIncomeTax = new javax.swing.JTextField();
        txtInterestRate = new javax.swing.JTextField();
        txtFundingAmt = new javax.swing.JTextField();
        btnRequestforApprovedStatus = new javax.swing.JButton();
        cbSelectBusiness = new javax.swing.JComboBox<>();
        txtInterestStartTime = new javax.swing.JTextField();
        lblInterestRate1 = new javax.swing.JLabel();
        txtLenderStatus = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ViewDetailsPane = new javax.swing.JPanel();
        lblFundingAmtInFD = new javax.swing.JLabel();
        txtFundingAmtAlloted = new javax.swing.JTextField();
        lblFundingAmtInFD1 = new javax.swing.JLabel();
        txtTotalFundingAmt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        panelWorkRequests = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabWorkRequests = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        panQueryManagement = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtQuery = new javax.swing.JTextArea();
        btnSendRequest = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabQueries = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnLogOut = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1000, 1000));
        setMinimumSize(new java.awt.Dimension(1000, 1000));

        LenderPane.setForeground(new java.awt.Color(0, 171, 214));
        LenderPane.setMaximumSize(new java.awt.Dimension(1000, 1000));
        LenderPane.setMinimumSize(new java.awt.Dimension(1000, 1000));
        LenderPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LenderPaneMousePressed(evt);
            }
        });

        paneBusinessDetails.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblBusID.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblBusID.setForeground(new java.awt.Color(0, 171, 214));
        lblBusID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBusID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/id-card.png"))); // NOI18N
        lblBusID.setText("Business ID:");
        paneBusinessDetails.add(lblBusID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 240, 80));

        txtBusinessId.setEditable(false);
        txtBusinessId.setBackground(new java.awt.Color(0, 178, 223));
        txtBusinessId.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtBusinessId.setForeground(new java.awt.Color(255, 255, 255));
        txtBusinessId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusinessIdActionPerformed(evt);
            }
        });
        paneBusinessDetails.add(txtBusinessId, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 80, 290, 38));

        txtBusinessName.setBackground(new java.awt.Color(0, 178, 223));
        txtBusinessName.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtBusinessName.setForeground(new java.awt.Color(255, 255, 255));
        paneBusinessDetails.add(txtBusinessName, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 170, 290, 38));

        lblBusName.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblBusName.setForeground(new java.awt.Color(0, 171, 214));
        lblBusName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBusName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/id-card (1).png"))); // NOI18N
        lblBusName.setText("Business Name:");
        paneBusinessDetails.add(lblBusName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 260, -1));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 171, 214));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/document.png"))); // NOI18N
        jLabel1.setText("Business Description:");
        paneBusinessDetails.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 280, 70));

        txtBusinessDes.setBackground(new java.awt.Color(0, 178, 223));
        txtBusinessDes.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtBusinessDes.setForeground(new java.awt.Color(255, 255, 255));
        paneBusinessDetails.add(txtBusinessDes, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 260, 290, 38));

        lblBusOrgType.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblBusOrgType.setForeground(new java.awt.Color(0, 171, 214));
        lblBusOrgType.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBusOrgType.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/type.png"))); // NOI18N
        lblBusOrgType.setText("Organization Type:");
        paneBusinessDetails.add(lblBusOrgType, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 339, 280, 80));

        txtBusinessOrgType.setEditable(false);
        txtBusinessOrgType.setBackground(new java.awt.Color(0, 178, 223));
        txtBusinessOrgType.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtBusinessOrgType.setForeground(new java.awt.Color(255, 255, 255));
        txtBusinessOrgType.setText("Private Business Organization");
        paneBusinessDetails.add(txtBusinessOrgType, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 362, 290, 38));

        btnAddBusPrivateOrg.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnAddBusPrivateOrg.setForeground(new java.awt.Color(0, 171, 214));
        btnAddBusPrivateOrg.setText("Add Business to Private Organization");
        btnAddBusPrivateOrg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBusPrivateOrgActionPerformed(evt);
            }
        });
        paneBusinessDetails.add(btnAddBusPrivateOrg, new org.netbeans.lib.awtextra.AbsoluteConstraints(307, 570, 300, 50));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/istockphoto-1281736074-612x612 (1).jpg"))); // NOI18N
        paneBusinessDetails.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 980));

        txtLenderName.setText("LENDER NAME");
        paneBusinessDetails.add(txtLenderName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 186, 32));

        LenderPane.addTab("Business Details", paneBusinessDetails);

        AddDetailsPane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTotalRevenue.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblTotalRevenue.setForeground(new java.awt.Color(0, 171, 214));
        lblTotalRevenue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/revenue.png"))); // NOI18N
        lblTotalRevenue.setText("Your Total Revenue");
        AddDetailsPane.add(lblTotalRevenue, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 290, 70));

        lblIncomeTaxamt.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblIncomeTaxamt.setForeground(new java.awt.Color(0, 171, 214));
        lblIncomeTaxamt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/tax.png"))); // NOI18N
        lblIncomeTaxamt.setText("Enter your Income tax amount ");
        AddDetailsPane.add(lblIncomeTaxamt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 350, 70));

        lblInterestRate.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblInterestRate.setForeground(new java.awt.Color(0, 171, 214));
        lblInterestRate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/interest-rate.png"))); // NOI18N
        lblInterestRate.setText("Enter the Interest rate you will be charging");
        AddDetailsPane.add(lblInterestRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 490, 470, 70));

        lblInterestStartYears.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblInterestStartYears.setForeground(new java.awt.Color(0, 171, 214));
        lblInterestStartYears.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/save-time.png"))); // NOI18N
        lblInterestStartYears.setText("Enter the Interest rate start years");
        AddDetailsPane.add(lblInterestStartYears, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 400, 370, 70));

        lblBusiness.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblBusiness.setForeground(new java.awt.Color(0, 171, 214));
        lblBusiness.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/business.png"))); // NOI18N
        lblBusiness.setText("Choose a business to support");
        AddDetailsPane.add(lblBusiness, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 370, 70));

        lblFundingAmt.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblFundingAmt.setForeground(new java.awt.Color(0, 171, 214));
        lblFundingAmt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/loan.png"))); // NOI18N
        lblFundingAmt.setText("Please enter the total funding amount");
        AddDetailsPane.add(lblFundingAmt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 400, 70));

        txtTotalRevenue.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtTotalRevenue.setForeground(new java.awt.Color(0, 171, 214));
        AddDetailsPane.add(txtTotalRevenue, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 50, 266, 40));

        txtIncomeTax.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtIncomeTax.setForeground(new java.awt.Color(0, 171, 214));
        AddDetailsPane.add(txtIncomeTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 140, 266, 40));

        txtInterestRate.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtInterestRate.setForeground(new java.awt.Color(0, 171, 214));
        txtInterestRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInterestRateActionPerformed(evt);
            }
        });
        AddDetailsPane.add(txtInterestRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 500, 266, 40));

        txtFundingAmt.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtFundingAmt.setForeground(new java.awt.Color(0, 171, 214));
        AddDetailsPane.add(txtFundingAmt, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 320, 266, 40));

        btnRequestforApprovedStatus.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnRequestforApprovedStatus.setForeground(new java.awt.Color(0, 171, 214));
        btnRequestforApprovedStatus.setText("Request for Approved Status");
        btnRequestforApprovedStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestforApprovedStatusActionPerformed(evt);
            }
        });
        AddDetailsPane.add(btnRequestforApprovedStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(364, 680, 290, 40));

        cbSelectBusiness.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        cbSelectBusiness.setForeground(new java.awt.Color(0, 171, 214));
        AddDetailsPane.add(cbSelectBusiness, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 230, 266, 40));

        txtInterestStartTime.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtInterestStartTime.setForeground(new java.awt.Color(0, 171, 214));
        txtInterestStartTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInterestStartTimeActionPerformed(evt);
            }
        });
        AddDetailsPane.add(txtInterestStartTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 410, 266, 40));

        lblInterestRate1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblInterestRate1.setForeground(new java.awt.Color(0, 171, 214));
        lblInterestRate1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/status.png"))); // NOI18N
        lblInterestRate1.setText("Lender Status:");
        AddDetailsPane.add(lblInterestRate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 580, 350, 60));

        txtLenderStatus.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtLenderStatus.setForeground(new java.awt.Color(0, 171, 214));
        txtLenderStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLenderStatusActionPerformed(evt);
            }
        });
        AddDetailsPane.add(txtLenderStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 590, 266, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/abstract-template-background-white-and-bright-blue-squares-overlapping-with-halftone-and-texture-free-vector (1).jpg"))); // NOI18N
        AddDetailsPane.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, -100, 1000, 1140));

        LenderPane.addTab("Lender Details", AddDetailsPane);

        ViewDetailsPane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblFundingAmtInFD.setBackground(new java.awt.Color(255, 255, 255));
        lblFundingAmtInFD.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblFundingAmtInFD.setForeground(new java.awt.Color(0, 171, 214));
        lblFundingAmtInFD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/loan.png"))); // NOI18N
        lblFundingAmtInFD.setText("Funding Amount Alloted");
        ViewDetailsPane.add(lblFundingAmtInFD, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 330, 70));

        txtFundingAmtAlloted.setBackground(new java.awt.Color(0, 178, 223));
        txtFundingAmtAlloted.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtFundingAmtAlloted.setForeground(new java.awt.Color(255, 255, 255));
        ViewDetailsPane.add(txtFundingAmtAlloted, new org.netbeans.lib.awtextra.AbsoluteConstraints(587, 101, 228, 38));

        lblFundingAmtInFD1.setBackground(new java.awt.Color(255, 255, 255));
        lblFundingAmtInFD1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblFundingAmtInFD1.setForeground(new java.awt.Color(0, 171, 214));
        lblFundingAmtInFD1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/saving.png"))); // NOI18N
        lblFundingAmtInFD1.setText("Total Funding Amount");
        ViewDetailsPane.add(lblFundingAmtInFD1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 330, 70));

        txtTotalFundingAmt.setBackground(new java.awt.Color(0, 178, 223));
        txtTotalFundingAmt.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtTotalFundingAmt.setForeground(new java.awt.Color(255, 255, 255));
        ViewDetailsPane.add(txtTotalFundingAmt, new org.netbeans.lib.awtextra.AbsoluteConstraints(587, 220, 228, 38));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 171, 214));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/white-bright-abstract-background-vector-20802409.jpg"))); // NOI18N
        ViewDetailsPane.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -3, 1080, 1040));

        LenderPane.addTab("Funding Details", ViewDetailsPane);

        panelWorkRequests.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabWorkRequests.setBackground(new java.awt.Color(0, 178, 223));
        tabWorkRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Work Rquest Id", "Sender", "Receiver", "Sender Org", "Receiver Org", "Message", "Status"
            }
        ));
        jScrollPane6.setViewportView(tabWorkRequests);

        panelWorkRequests.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 100, 980, 360));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/white-bright-abstract-background-vector-20802409.jpg"))); // NOI18N
        panelWorkRequests.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 1010));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/request-for-proposal.png"))); // NOI18N
        jLabel7.setText("jLabel7");
        panelWorkRequests.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        LenderPane.addTab("WorkRequest", panelWorkRequests);

        txtQuery.setColumns(20);
        txtQuery.setRows(5);
        jScrollPane1.setViewportView(txtQuery);

        btnSendRequest.setText("Send Request");
        btnSendRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendRequestActionPerformed(evt);
            }
        });

        tabQueries.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Query ID", "Requestor", "Message"
            }
        ));
        jScrollPane2.setViewportView(tabQueries);

        javax.swing.GroupLayout panQueryManagementLayout = new javax.swing.GroupLayout(panQueryManagement);
        panQueryManagement.setLayout(panQueryManagementLayout);
        panQueryManagementLayout.setHorizontalGroup(
            panQueryManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panQueryManagementLayout.createSequentialGroup()
                .addGroup(panQueryManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panQueryManagementLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panQueryManagementLayout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(btnSendRequest))
                    .addGroup(panQueryManagementLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(309, Short.MAX_VALUE))
        );
        panQueryManagementLayout.setVerticalGroup(
            panQueryManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panQueryManagementLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSendRequest)
                .addGap(58, 58, 58)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(607, Short.MAX_VALUE))
        );

        LenderPane.addTab("Query Management", panQueryManagement);

        jPanel1.setBackground(new java.awt.Color(0, 178, 223));

        btnLogOut.setBackground(new java.awt.Color(0, 178, 223));
        btnLogOut.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnLogOut.setForeground(new java.awt.Color(255, 255, 255));
        btnLogOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logout (3).png"))); // NOI18N
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Lender Page");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(255, 255, 255)
                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 4, Short.MAX_VALUE)
                .addComponent(btnLogOut))
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(LenderPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(LenderPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1019, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRequestforApprovedStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestforApprovedStatusActionPerformed
        // TODO add your handling code here:

        Employee validator = null;
        if (txtTotalRevenue.getText().equals("") || txtTotalRevenue.getText().equalsIgnoreCase("0.0")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Revenue");
            return;
        } else if (txtIncomeTax.getText().equals("") || txtIncomeTax.getText().equalsIgnoreCase("0.0")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the IncomeTax");
            return;
        } else if (txtFundingAmt.getText().equals("") || txtFundingAmt.getText().equalsIgnoreCase("0.0")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Funding Amount");
            return;
        } else if (txtInterestStartTime.getText().equals("") || txtInterestStartTime.getText().equalsIgnoreCase("0.0")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Interest Date");
            return;
        } else if (txtInterestRate.getText().equals("") || txtInterestRate.getText().equalsIgnoreCase("0.0")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Interest Rate");
            return;
        } else if (cbSelectBusiness.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please select a Business");
            return;
        } else {
            if (!txtTotalRevenue.getText().matches("[0-9]+") || Integer.parseInt(txtTotalRevenue.getText()) < 1) {
                JOptionPane.showMessageDialog(this, "Please input correct revenue details");
                return;
            }
            if (Float.parseFloat(txtTotalRevenue.getText()) < 1 || !txtTotalRevenue.getText().matches("[0-9]+")) {
                JOptionPane.showMessageDialog(this, "Please input correct revenue details");
                return;
            }
            if (!txtIncomeTax.getText().matches("[0-9]+")) {//|| Integer.parseInt(txtIncomeTax.getText())<1
                JOptionPane.showMessageDialog(this, "Please input correct IncomeTax details");

            }
            if (!txtFundingAmt.getText().matches("[0-9]+") || Integer.parseInt(txtFundingAmt.getText()) < 10000) {
                JOptionPane.showMessageDialog(this, "Minimum funding requirement is $10000");
                return;
            }
            if (!txtInterestStartTime.getText().matches("[0-9]+")) {//|| Integer.parseInt(txtInterestStartTime.getText())<2
                JOptionPane.showMessageDialog(this, "Please input correct input on Interest Start time");
                return;
            }
            if (!txtInterestRate.getText().matches("[0-9]+")) {//|| Integer.parseInt(txtInterestRate.getText())>=10
                JOptionPane.showMessageDialog(this, "Please input correct interest Rate");
                return;
            }
            for (Network nw : system.getNetworkList()) {
                if ("Boston".equals(nw.getNetworkName())) {
                    for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {

                        if (ent.getEnterpriseType() == Enterprise.EnterpriseType.BUSINESSENTERPRISE) {
                            BusinessEnterprise busEnt = (BusinessEnterprise) ent;
                            int businessId = findBusinessId(String.valueOf(cbSelectBusiness.getSelectedItem()));
                            for (Business updateBus : busEnt.getBusinessDir()) {
                                if (updateBus.getBusinessId() == businessId) {
                                    updateBus.setLenderID(lenderID);
                                }
                            }
                        }

                        if (ent.getEnterpriseType() == Enterprise.EnterpriseType.PROPOSALMANAGEMENTENTERPRISE && validator == null) {
                            ProposalManagementEnterprise pme = (ProposalManagementEnterprise) ent;
                            Map<Integer, Employee> employeeDirectory = pme.getEmployeeDirectory();
                            validator = employeeDirectory.get(2);//validator is employee 2 of PME

                        }

                        if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                            UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;
                            ArrayList<Lender> lenderDirectory = userEnt.getLenderDirectory();
                            for (Lender len : lenderDirectory) {
                                if (len.getLenderID().equals(lenderID)) {
//                                    if (!len.isActiveStatus()) {
                                    if (len.getActiveStatus().equalsIgnoreCase("Initial")) {
                                        len.setFundingAmount(Float.parseFloat(txtFundingAmt.getText()));

                                        float fundingAmt = Float.parseFloat(txtFundingAmt.getText());
                                        if (fundingAmt < 10000) {
//                                            JOptionPane.showMessageDialog(rootPane, "Funding Amount should be minimum 100000");
//                                            return;
                                        }

                                        len.setTaxAmountPaid(Float.parseFloat(txtIncomeTax.getText()));
                                        len.setInterestRate(Float.parseFloat(txtInterestRate.getText()));
                                        len.setInterestStartYears(Integer.parseInt(txtInterestStartTime.getText()));
                                        len.setRevenue(Float.parseFloat(txtTotalRevenue.getText()));
                                        //Added by Ankit
                                        int businessId = findBusinessId(String.valueOf(cbSelectBusiness.getSelectedItem()));
                                        len.setSupportedBusinessId(businessId);

                                        //Generate Work Request at Network level
                                        WorkRequest addWorkRequests = nw.genWorkRequests(lenderID, "Validator", UserAccount.RoleType.LENDER, UserAccount.RoleType.VALIDATOR, Organization.Type.USERIDENTIFYORG, Organization.Type.AUDITINGORG, "RUNNING", lenderID + " sent for Account Validation");

                                        //Generate work Request at person level - Lender in this case
                                        len.addWorkReqToPerson(addWorkRequests);

                                        try {//adding the same workRequest to Validator also
                                            validator.addWorkReqToPerson(addWorkRequests);
                                        } catch (NullPointerException e) {
                                        }

                                        len.setActiveStatus("OnHold");
                                        JOptionPane.showMessageDialog(rootPane, "Sent for Validation");
                                        // JOptionPane.showMessageDialog(rootPane, businessId);

                                        popLenderDetails();
                                        return;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnRequestforApprovedStatusActionPerformed

    private void txtInterestRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInterestRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInterestRateActionPerformed

    private void LenderPaneMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LenderPaneMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_LenderPaneMousePressed

    private void txtInterestStartTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInterestStartTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInterestStartTimeActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:

        // dB4OUtil.storeSystem(system);
        LoginPage lp = new LoginPage();
        lp.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void txtBusinessIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusinessIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusinessIdActionPerformed

    private void btnAddBusPrivateOrgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBusPrivateOrgActionPerformed
        // TODO add your handling code here:
        //  BusinessEnterprise businessEnt = system.getNetworkList()
        try {
            if (txtBusinessName.getText().equals("") || txtBusinessName.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Please enter the name of your business");
                return;
            } else if (txtBusinessDes.getText().equals("") || txtBusinessDes.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Please enter the description of your business");
                return;
            } else {
                if (txtBusinessName.getText().matches("[0-9]+")) {
                    JOptionPane.showMessageDialog(this, "Oops! Looks like you enter a number! No numbers accepted");
                    return;
                }
                Business addBusObj = new Business();
                for (Network nw : system.getNetworkList()) {
                    if ("Boston".equals(nw.getNetworkName())) {
                        for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {

                            if (ent.getEnterpriseType() == Enterprise.EnterpriseType.BUSINESSENTERPRISE) {
                                BusinessEnterprise busEnt = (BusinessEnterprise) ent;

                                int latestBusID = Integer.parseInt(txtBusinessId.getText());
                                addBusObj = busEnt.addBusinesses(latestBusID);

                                addBusObj.setBusinessDescription(txtBusinessDes.getText());
                                addBusObj.setBusinessName(txtBusinessName.getText());

                                addBusObj.setOrgType(Organization.Type.PRIVATEBUSINESSORG);
                                addBusObj.setLenderID(lenderID);

                            }
                            if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                                UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;
                                ArrayList<Lender> lenderDirectory = userEnt.getLenderDirectory();
                                for (Lender len : lenderDirectory) {
                                    if (len.getLenderID().equals(lenderID)) {
                                        len.setLenderBusiness(addBusObj);
                                        JOptionPane.showMessageDialog(rootPane, "Business Added to " + lenderID);
                                        btnAddBusPrivateOrg.setVisible(false);
                                        return;
                                    }

                                }
                            }

                        }
                    }
                }
            }
//           

        } catch (java.lang.NullPointerException ne) {
        }

    }//GEN-LAST:event_btnAddBusPrivateOrgActionPerformed

    private void txtLenderStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLenderStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLenderStatusActionPerformed

    private void btnSendRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendRequestActionPerformed
        // TODO add your handling code here:
        Employee queryManager = null;
        QueryResolutionOrg queryAdd = null;
        for (Network nw : system.getNetworkList()) {
            if ("Boston".equals(nw.getNetworkName())) {
                for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {

                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.CUSTOMERSUPPORTENTERPRISE && queryAdd == null) {
                        CustomerSupportEnterprise custEnt = (CustomerSupportEnterprise) ent;

//                         UserAccount queryUA = new UserAccount("QueryManager", UserAccount.RoleType.QUERYMANAGER);
//                        custEnt.setEmployees("Query Manager", "queryManager@gmail.com", "Active", Organization.Type.QUERYRESOLUTIONORG, queryUA);
//                        nw.addUserAccountToNetwork(queryUA);
//                        
//                        
                        queryManager = custEnt.getEmployeeDirectory().get(1);
                        queryAdd = new QueryResolutionOrg(lenderID, txtQuery.getText());
                        nw.addQueriesToNetwork(queryAdd);
                    }

                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                        UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;
                        ArrayList<Lender> lenderDirectory = userEnt.getLenderDirectory();
                        for (Lender len : lenderDirectory) {
                            if (len.getLenderID().equals(lenderID)) {

                                WorkRequest workReqAdd = nw.genWorkRequests(lenderID, "QM", UserAccount.RoleType.LENDER, UserAccount.RoleType.QUERYMANAGER, Organization.Type.USERIDENTIFYORG, Organization.Type.QUERYRESOLUTIONORG, "Intitated", "" + lenderID + " query request");
                                len.addWorkReqToPerson(workReqAdd);
                                queryManager.addWorkReqToPerson(workReqAdd);

                                len.addQueryToPerson(queryAdd);

                                popWorkReqTab(len.getPersonWorkQueue());
                                popQueries(len.getPersonQueries());
                                return;
                            }

                        }
                    }
                }
            }

        }
    }//GEN-LAST:event_btnSendRequestActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LenderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LenderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LenderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LenderPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LenderPage(lenderID).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddDetailsPane;
    private javax.swing.JTabbedPane LenderPane;
    private javax.swing.JPanel ViewDetailsPane;
    private javax.swing.JButton btnAddBusPrivateOrg;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnRequestforApprovedStatus;
    private javax.swing.JButton btnSendRequest;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbSelectBusiness;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblBusID;
    private javax.swing.JLabel lblBusName;
    private javax.swing.JLabel lblBusOrgType;
    private javax.swing.JLabel lblBusiness;
    private javax.swing.JLabel lblFundingAmt;
    private javax.swing.JLabel lblFundingAmtInFD;
    private javax.swing.JLabel lblFundingAmtInFD1;
    private javax.swing.JLabel lblIncomeTaxamt;
    private javax.swing.JLabel lblInterestRate;
    private javax.swing.JLabel lblInterestRate1;
    private javax.swing.JLabel lblInterestStartYears;
    private javax.swing.JLabel lblTotalRevenue;
    private javax.swing.JPanel panQueryManagement;
    private javax.swing.JPanel paneBusinessDetails;
    private javax.swing.JPanel panelWorkRequests;
    private javax.swing.JTable tabQueries;
    private javax.swing.JTable tabWorkRequests;
    private javax.swing.JTextField txtBusinessDes;
    private javax.swing.JTextField txtBusinessId;
    private javax.swing.JTextField txtBusinessName;
    private javax.swing.JTextField txtBusinessOrgType;
    private javax.swing.JTextField txtFundingAmt;
    private javax.swing.JTextField txtFundingAmtAlloted;
    private javax.swing.JTextField txtIncomeTax;
    private javax.swing.JTextField txtInterestRate;
    private javax.swing.JTextField txtInterestStartTime;
    private javax.swing.JTextField txtLenderName;
    private javax.swing.JTextField txtLenderStatus;
    private javax.swing.JTextArea txtQuery;
    private javax.swing.JTextField txtTotalFundingAmt;
    private javax.swing.JTextField txtTotalRevenue;
    // End of variables declaration//GEN-END:variables

    private void popWorkReqTab(Map<Integer, WorkRequest> personWorkIDs) {
        DefaultTableModel model = (DefaultTableModel) tabWorkRequests.getModel();
        model.setRowCount(0);

        for (Map.Entry<Integer, WorkRequest> entry : personWorkIDs.entrySet()) {
            Object key = entry.getKey();
            Object val = entry.getValue();

            Object[] row = new Object[7];
            row[0] = entry.getKey();
            row[1] = entry.getValue().getSender();
            row[2] = entry.getValue().getReceiver();
            row[3] = entry.getValue().getSenderOrg();
            row[4] = entry.getValue().getReceiverOrg();
            row[5] = entry.getValue().getMessage();
            row[6] = entry.getValue().getStatus();

            model.addRow(row);
        }

    }

    private void popQueries(Map<Integer, QueryResolutionOrg> personQueries) {
        DefaultTableModel model = (DefaultTableModel) tabQueries.getModel();
        model.setRowCount(0);

        for (Map.Entry<Integer, QueryResolutionOrg> entry : personQueries.entrySet()) {
            Object key = entry.getKey();
            Object val = entry.getValue();

            Object[] row = new Object[3];

            row[0] = entry.getKey();
            row[1] = entry.getValue().getRequestor();
            row[2] = entry.getValue().getMessage();

            model.addRow(row);

        }
    }

    private void popLenderDetails() {
        for (Network nw : system.getNetworkList()) {
            if ("Boston".equalsIgnoreCase(nw.getNetworkName())) {
                for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                        UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;
                        ArrayList<Lender> lenderDirectory = userEnt.getLenderDirectory();
                        for (Lender len : lenderDirectory) {
                            if (len.getLenderID().equals(lenderID)) {
                                Map<Integer, WorkRequest> personWorkIDs = len.getPersonWorkQueue();

                                popWorkReqTab(personWorkIDs);

                                txtTotalFundingAmt.setText(String.valueOf(len.getFundingAmount()));
                                txtFundingAmtAlloted.setText(String.valueOf(len.getTotalAmountFunded()));

                                txtLenderStatus.setText(len.getActiveStatus());
                                txtLenderStatus.setEditable(false);
                                // if (len.isActiveStatus()) {
                                txtFundingAmt.setText(String.valueOf(len.getFundingAmount()));
                                txtIncomeTax.setText(String.valueOf(len.getTaxAmountPaid()));
                                txtInterestRate.setText(String.valueOf(len.getInterestRate()));
                                txtInterestStartTime.setText(String.valueOf(len.getInterestStartYears()));
                                txtTotalRevenue.setText(String.valueOf(len.getRevenue()));
//                                    cbSelectBusiness.addItem(String.valueOf(BusinessNameById(len.getSupportedBusinessId())));
                                cbSelectBusiness.setSelectedItem(String.valueOf(BusinessNameById(len.getSupportedBusinessId())) + "");
                                addPublicBusinesses();
//                                    test.setText(String.valueOf(len.getSupportedBusinessId()));
                                Business lenderBusiness = len.getLenderBusiness();

                                if (len.getActiveStatus().equalsIgnoreCase("initial")) {
                                    txtFundingAmt.setEditable(true);
                                    txtIncomeTax.setEditable(true);
                                    txtInterestRate.setEditable(true);
                                    txtInterestStartTime.setEditable(true);
                                    txtTotalRevenue.setEditable(true);
                                    cbSelectBusiness.setEditable(true);

                                    //Dont let add businesses too if status is intial
                                    txtBusinessId.setEditable(false);
                                    txtBusinessName.setEditable(false);
                                    txtBusinessDes.setEditable(false);

                                    btnAddBusPrivateOrg.setVisible(false);
                                    return;

                                } else if (len.getActiveStatus().equalsIgnoreCase("OnHold") || len.getActiveStatus().equalsIgnoreCase("Rejected")) {

                                    txtBusinessId.setEditable(false);
                                    txtBusinessName.setEditable(false);
                                    txtBusinessDes.setEditable(false);
                                    //   JOptionPane.showMessageDialog(rootPane, "Your case is under Verification");
                                    btnRequestforApprovedStatus.setVisible(false);
                                    btnAddBusPrivateOrg.setVisible(false);

                                    txtFundingAmt.setEditable(false);
                                    txtIncomeTax.setEditable(false);
                                    txtInterestRate.setEditable(false);
                                    txtInterestStartTime.setEditable(false);
                                    txtTotalRevenue.setEditable(false);
                                    cbSelectBusiness.setEditable(false);
                                    return;
                                } else if (len.getActiveStatus().equalsIgnoreCase("Approved")) {

                                    btnRequestforApprovedStatus.setVisible(false);
                                    // btnRequestforApprovedStatus.setVisible(false);

                                    txtBusinessId.setEditable(true);
                                    txtBusinessName.setEditable(true);
                                    txtBusinessDes.setEditable(true);
                                    if (lenderBusiness != null) {
                                        txtBusinessId.setText(String.valueOf(len.getLenderBusiness().getBusinessId()));
                                        txtBusinessName.setText(len.getLenderBusiness().getBusinessName());
                                        txtBusinessDes.setText(len.getLenderBusiness().getBusinessDescription());

                                        txtBusinessId.setEditable(false);
                                        txtBusinessName.setEditable(false);
                                        txtBusinessDes.setEditable(false);

                                        btnAddBusPrivateOrg.setVisible(false);

                                        JOptionPane.showMessageDialog(rootPane, "Your status is Approved and You have added business");

                                    } else {
                                        // JOptionPane.showMessageDialog(rootPane, "Your status is Approved. Now you can add business");
                                        txtBusinessId.setEditable(true);
                                        txtBusinessName.setEditable(true);
                                        txtBusinessDes.setEditable(true);
                                        btnAddBusPrivateOrg.setVisible(true);
                                    }

                                    txtFundingAmt.setEditable(false);
                                    txtIncomeTax.setEditable(false);
                                    txtInterestRate.setEditable(false);
                                    txtInterestStartTime.setEditable(false);
                                    txtTotalRevenue.setEditable(false);
                                    cbSelectBusiness.setEditable(false);

                                    return;

                                }

                                return;

                            }
                        }

                    }
                }
            }
        }
    }

    public String BusinessNameById(int supportedBusinessId) {
        for (Network nw : system.getNetworkList()) {
            if ("Boston".equals(nw.getNetworkName())) {
                for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.BUSINESSENTERPRISE) {
                        BusinessEnterprise busEnt = (BusinessEnterprise) ent;
                        for (Business br : busEnt.getBusinessDir()) {
                            if (br.getBusinessId() == supportedBusinessId) {
                                return br.getBusinessName();
                            }
                        }
                    }
                }
            }
        }
        return null;
    }

    public void addPublicBusinesses() {
        for (Network nw : system.getNetworkList()) {
            if ("Boston".equals(nw.getNetworkName())) {
                for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.BUSINESSENTERPRISE) {
                        BusinessEnterprise busEnt = (BusinessEnterprise) ent;
                        for (Business br : busEnt.getBusinessDir()) {
                            if (br.getOrgType() == Organization.Type.PUBLICBUSINESSPORTFOLIOORG) {
                                if (br.getLenderID() == null) {
                                    cbSelectBusiness.addItem(br.getBusinessName() + "");

                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public int findBusinessId(String businessName) {
        for (Network nw : system.getNetworkList()) {
            if ("Boston".equals(nw.getNetworkName())) {
                for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.BUSINESSENTERPRISE) {
                        BusinessEnterprise busEnt = (BusinessEnterprise) ent;
                        for (Business br : busEnt.getBusinessDir()) {
                            if (br.getBusinessName().equalsIgnoreCase(businessName)) {
                                return (br.getBusinessId());
                            }
                        }
                    }
                }
            }
        }
        return 0;
    }

}
