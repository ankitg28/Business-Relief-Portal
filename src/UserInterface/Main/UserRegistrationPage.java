/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserInterface.Main;

import Business.DB4OUtil.DB4OUtil;
import BusinessReliefPortal.Borrower.Borrower;
import BusinessReliefPortal.Enterprise.Enterprise;
import BusinessReliefPortal.Enterprise.UserAndVerificationEnterprise;
import BusinessReliefPortal.Lender.Lender;
import BusinessReliefPortal.Mail;
import BusinessReliefPortal.Network.Network;
import BusinessReliefPortal.UserAccount.UserAccount;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.MessagingException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author ishitajanwale
 */
public class UserRegistrationPage extends javax.swing.JFrame {

    BusinessReliefPortal.BusinessReliefSystem system;

    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();

    /**
     * Creates new form BorrowerRegistrationPage
     */
    public UserRegistrationPage() {
        initComponents();
        system = LoginPage.system;
        //system = dB4OUtil.retrieveSystem();
    }
    byte[] photo = null;
    String filename = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RegistrationPanel = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        lblRole = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        cbRole = new javax.swing.JComboBox<>();
        lblProfilePicture = new javax.swing.JLabel();
        btnUploadImage = new javax.swing.JButton();
        lblImage = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Registerbtn = new javax.swing.JButton();
        btnSignIn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        RegistrationPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblName.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblName.setForeground(new java.awt.Color(0, 138, 185));
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/id-card.png"))); // NOI18N
        lblName.setText("Name");
        RegistrationPanel.add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 220, 90));

        txtName.setBackground(new java.awt.Color(0, 177, 237));
        txtName.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtName.setForeground(new java.awt.Color(255, 255, 255));
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
        });
        RegistrationPanel.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 256, 270, 40));

        lblEmail.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(0, 138, 185));
        lblEmail.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblEmail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mail-inbox-app (1).png"))); // NOI18N
        lblEmail.setText("Email");
        RegistrationPanel.add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 320, 240, 100));

        lblRole.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblRole.setForeground(new java.awt.Color(0, 138, 185));
        lblRole.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblRole.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/roles.png"))); // NOI18N
        lblRole.setText("Role");
        RegistrationPanel.add(lblRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 430, 230, 80));

        txtEmail.setBackground(new java.awt.Color(0, 177, 237));
        txtEmail.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(255, 255, 255));
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmailKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmailKeyReleased(evt);
            }
        });
        RegistrationPanel.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 346, 270, 40));

        cbRole.setBackground(new java.awt.Color(0, 177, 237));
        cbRole.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        cbRole.setForeground(new java.awt.Color(255, 255, 255));
        cbRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select Role", "Lender", "Borrower" }));
        RegistrationPanel.add(cbRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 435, 270, 40));

        lblProfilePicture.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblProfilePicture.setForeground(new java.awt.Color(0, 138, 185));
        lblProfilePicture.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblProfilePicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/image.png"))); // NOI18N
        lblProfilePicture.setText("Add Profile Picture");
        RegistrationPanel.add(lblProfilePicture, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 520, -1, 70));

        btnUploadImage.setBackground(new java.awt.Color(0, 177, 237));
        btnUploadImage.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnUploadImage.setForeground(new java.awt.Color(255, 255, 255));
        btnUploadImage.setText("Upload Image");
        btnUploadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadImageActionPerformed(evt);
            }
        });
        RegistrationPanel.add(btnUploadImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 530, 270, 40));

        lblImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        RegistrationPanel.add(lblImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 320, 210, 170));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 154, 205));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/class.png"))); // NOI18N
        jLabel1.setText("     User Registration Form");
        RegistrationPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 19, 520, 170));

        Registerbtn.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        Registerbtn.setForeground(new java.awt.Color(0, 138, 185));
        Registerbtn.setText("Register");
        Registerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterbtnActionPerformed(evt);
            }
        });
        RegistrationPanel.add(Registerbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 620, 132, 39));

        btnSignIn.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnSignIn.setForeground(new java.awt.Color(0, 138, 185));
        btnSignIn.setText("Now Sign IN");
        btnSignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignInActionPerformed(evt);
            }
        });
        RegistrationPanel.add(btnSignIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 700, 238, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/istockphoto-1281736074-612x612 (1).jpg"))); // NOI18N
        RegistrationPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 1000));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(RegistrationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(RegistrationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUploadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadImageActionPerformed
        // TODO add your handling code here:
        JFileChooser ch = new JFileChooser();
        ch.showOpenDialog(null);
        File f = ch.getSelectedFile();
        lblImage.setIcon(new ImageIcon(f.toString()));
        filename = f.getAbsolutePath();
//        lblProfilePicture.setText(filename);
    }//GEN-LAST:event_btnUploadImageActionPerformed

    private void RegisterbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterbtnActionPerformed
        // TODO add your handling code here:
        if (txtName.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Name");
        } //        else if(!Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", txtEmail.getText())){
        //            
        ////                JOptionPane.showMessageDialog(rootPane, "Please enter a valid Email");
        //        } 
        else if (cbRole.getSelectedItem().equals("Please Select Role")) {
            JOptionPane.showMessageDialog(rootPane, "Please select a Role");
        } else if (lblImage.getIcon().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please upload an image");
        } else {

            String personName = txtName.getText();
            String personEmail = txtEmail.getText();
            String personRole = String.valueOf(cbRole.getSelectedItem());

            String personImagePath = filename;

            for (Network nw : system.getNetworkList()) {
                if ("Boston".equalsIgnoreCase(nw.getNetworkName())) {
                    for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                        if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                            UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;
                            if (personRole.equalsIgnoreCase("lender")) {
                                int id = userEnt.getLenderDirectory().size();
                                String lenderId = "Lender" + (id + 1);
                                //creating a person
                                /// userEnt.addPerson(personName, personEmail, personImagePath, personRole, false);
                                //creating a useraccount based on person credentials
                                UserAccount newUserAccount = userEnt.createPersonCredentials(lenderId, UserAccount.RoleType.LENDER);
                                nw.addUserAccountToNetwork(newUserAccount);
                                //creating a new lender object
                                Lender newLender = userEnt.addLender(lenderId, personName, personEmail, personImagePath, UserAccount.RoleType.LENDER, "Initial");
                                // assigning the useraccount credentials to lender
                                newLender.setUserAccount(newUserAccount);
                                //sending the lender login credentials on his email
                                sendEmailToUser(personName, personEmail, newUserAccount.getUserName(), newUserAccount.getPassword());
                                // test if registration was successfull
                                printLender();
                                JOptionPane.showMessageDialog(rootPane, "Registered succesfully! Please check your email for your credentials " + newUserAccount.getUserName());

                                return;
                            } else {
                                //userEnt.addPerson(personName, personEmail, personImagePath, personRole, true);
                                int id = userEnt.getBorrowerDirectory().size();
                                String borrowerId = "Borrower" + (id + 1);
                                UserAccount newUserAccount = userEnt.createPersonCredentials(borrowerId, UserAccount.RoleType.BORROWER);

                                Borrower newBorrower = userEnt.addBorrower(borrowerId, personName, personEmail, personImagePath, UserAccount.RoleType.BORROWER, "Initial");
                                newBorrower.setBorrowerAccount(newUserAccount);
                                sendEmailToUser(personName, personEmail, newUserAccount.getUserName(), newUserAccount.getPassword());
                                nw.addUserAccountToNetwork(newUserAccount);
                                printBorrower();
                                JOptionPane.showMessageDialog(rootPane, "Registered succesfully! Please check your email for your credentials " + newUserAccount.getUserName());

                                return;
                            }
                        }
                    }
                }
            }
        }

    }//GEN-LAST:event_RegisterbtnActionPerformed
    // This function is to test if lender is successfully registered
    public void printLender() {
        for (Network nw : system.getNetworkList()) {
            if (nw.getNetworkName() == "Boston") {
                for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                        UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;

                        for (Lender ln : userEnt.getLenderDirectory()) {
                            System.out.println("USername: " + ln.getUserAccount().getUserName());
                        }

                    }
                }
            }
        }
    }

    // This function is to test if borrower is successfully registered
    public void printBorrower() {
        for (Network nw : system.getNetworkList()) {
            if ("Boston".equalsIgnoreCase(nw.getNetworkName())) {
                for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                        UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;

                        for (Borrower br : userEnt.getBorrowerDirectory()) {
//                            System.out.println(br.getRoleType());
                        }

                    }
                }
            }
        }
    }

    public void sendEmailToUser(String name, String email, String username, String password) {
        Mail mail = new Mail();
        String emailSubject = "Welcome " + name + "!!! We are Glad to serve you!";
        String emailBody = "Here are you Login Credentials:<br><b>Username:</b>" + username + "<br><b>Password:</b>" + password;
        String recipeint = email;
        try {
            mail.preparetoSendEmail(emailSubject, emailBody, recipeint);
        } catch (MessagingException ex) {
            Logger.getLogger(UserRegistrationPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(UserRegistrationPage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void btnSignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignInActionPerformed
        // TODO add your handling code here:
        //  dB4OUtil.storeSystem(system);
        LoginPage lp = new LoginPage();
        lp.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnSignInActionPerformed

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            txtName.setEditable(false);
            JOptionPane.showMessageDialog(rootPane, "Please enter a valid Name");
        } else {
            txtName.setEditable(true);
        }
    }//GEN-LAST:event_txtNameKeyPressed

    private void txtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyPressed
        // TODO add your handling code here:


    }//GEN-LAST:event_txtEmailKeyPressed

    private void txtEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtEmailKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserRegistrationPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserRegistrationPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserRegistrationPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserRegistrationPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserRegistrationPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Registerbtn;
    private javax.swing.JPanel RegistrationPanel;
    private javax.swing.JButton btnSignIn;
    private javax.swing.JButton btnUploadImage;
    private javax.swing.JComboBox<String> cbRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblProfilePicture;
    private javax.swing.JLabel lblRole;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
