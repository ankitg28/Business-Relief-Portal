/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserInterface.Main;

import BusinessReliefPortal.BusinessReliefSystem;
import BusinessReliefPortal.Employee.Employee;
import BusinessReliefPortal.Enterprise.CustomerSupportEnterprise;
import BusinessReliefPortal.Enterprise.Enterprise;
import BusinessReliefPortal.Enterprise.FundManagementEnterprise;
import BusinessReliefPortal.Mail;
import BusinessReliefPortal.Network.Network;
import BusinessReliefPortal.Organization.Organization;
import BusinessReliefPortal.Organization.QueryResolutionOrg;
import BusinessReliefPortal.UserAccount.UserAccount;
import BusinessReliefPortal.WorkRequest.WorkRequest;
import EDU.purdue.cs.bloat.reflect.Catch;
import java.io.IOException;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ritvikparamkusham
 */
public class QueryManagerPage extends javax.swing.JFrame {

    BusinessReliefSystem system;

    /**
     * Creates new form QueryManagerPage
     */
    public QueryManagerPage() {
        initComponents();
        system = LoginPage.system;
        popQueries();
        popWorkReq();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panQueries = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelWorkRequests = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabWorkRequests = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        paneQueries = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabQueries = new javax.swing.JTable();
        btnTakeAction = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnLogOut = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1000, 1000));
        setMinimumSize(new java.awt.Dimension(1000, 1000));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panQueries.setMaximumSize(new java.awt.Dimension(1000, 1000));
        panQueries.setMinimumSize(new java.awt.Dimension(1000, 1000));
        panQueries.setPreferredSize(new java.awt.Dimension(1000, 1000));

        panelWorkRequests.setBackground(new java.awt.Color(0, 171, 214));
        panelWorkRequests.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabWorkRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Work Rquest Id", "Sender", "Receiver", "Sender Org", "Receiver Org", "Message", "Status"
            }
        ));
        jScrollPane6.setViewportView(tabWorkRequests);

        panelWorkRequests.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 26, 874, 261));

        jLabel1.setText("jLabel1");
        panelWorkRequests.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 920));

        jTabbedPane1.addTab("WorkRequest", panelWorkRequests);

        paneQueries.setBackground(new java.awt.Color(0, 171, 214));

        tabQueries.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Query ID", "Requestor", "Message"
            }
        ));
        jScrollPane1.setViewportView(tabQueries);

        btnTakeAction.setText("Take action");
        btnTakeAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTakeActionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneQueriesLayout = new javax.swing.GroupLayout(paneQueries);
        paneQueries.setLayout(paneQueriesLayout);
        paneQueriesLayout.setHorizontalGroup(
            paneQueriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneQueriesLayout.createSequentialGroup()
                .addGroup(paneQueriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneQueriesLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(paneQueriesLayout.createSequentialGroup()
                        .addGap(311, 311, 311)
                        .addComponent(btnTakeAction, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(213, Short.MAX_VALUE))
        );
        paneQueriesLayout.setVerticalGroup(
            paneQueriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneQueriesLayout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(btnTakeAction, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(513, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Queries ", paneQueries);

        javax.swing.GroupLayout panQueriesLayout = new javax.swing.GroupLayout(panQueries);
        panQueries.setLayout(panQueriesLayout);
        panQueriesLayout.setHorizontalGroup(
            panQueriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panQueriesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panQueriesLayout.setVerticalGroup(
            panQueriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panQueriesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 952, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(panQueries, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 44, 892, 457));

        jPanel1.setBackground(new java.awt.Color(0, 171, 214));

        btnLogOut.setBackground(new java.awt.Color(0, 178, 223));
        btnLogOut.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnLogOut.setForeground(new java.awt.Color(255, 255, 255));
        btnLogOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logout (3).png"))); // NOI18N
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(942, Short.MAX_VALUE)
                .addComponent(btnLogOut)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 2, Short.MAX_VALUE)
                .addComponent(btnLogOut))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/abstract-template-background-white-and-bright-blue-squares-overlapping-with-halftone-and-texture-free-vector (1).jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 46, 1000, 950));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        LoginPage lp = new LoginPage();
        lp.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnTakeActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTakeActionActionPerformed
        // TODO add your handling code here:
        
         int selectedRowIndex = tabQueries.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Row to take action");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tabQueries.getModel();

        Vector<Vector> dataVector;
        dataVector = model.getDataVector();
        
        String emailBody = (String) dataVector.get(selectedRowIndex).get(2);
        String receipent = "ishitajanwale90@gmail.com";
     
                Mail mail = new Mail();
        try {       
            mail.preparetoSendEmail("User Raised a request", emailBody, receipent);
        } catch (MessagingException ex) {
            Logger.getLogger(QueryManagerPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(QueryManagerPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(rootPane, "System notified");
        
        
    }//GEN-LAST:event_btnTakeActionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QueryManagerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QueryManagerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QueryManagerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QueryManagerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QueryManagerPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnTakeAction;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panQueries;
    private javax.swing.JPanel paneQueries;
    private javax.swing.JPanel panelWorkRequests;
    private javax.swing.JTable tabQueries;
    private javax.swing.JTable tabWorkRequests;
    // End of variables declaration//GEN-END:variables

    private void popQueries() {
        DefaultTableModel model = (DefaultTableModel) tabQueries.getModel();
        model.setRowCount(0);

        for (Network nw : system.getNetworkList()) {
            if ("Boston".equalsIgnoreCase(nw.getNetworkName())) {
                Map<Integer, QueryResolutionOrg> queriesNetwork = nw.getQueriesNetwork();
                try {
                    for (Map.Entry<Integer, QueryResolutionOrg> entry : queriesNetwork.entrySet()) {
                        Object key = entry.getKey();
                        Object val = entry.getValue();

                        Object[] row = new Object[3];

                        row[0] = entry.getKey();
                        row[1] = entry.getValue().getRequestor();
                        row[2] = entry.getValue().getMessage();

                        model.addRow(row);

                    }
                } catch (Exception e) {
                }

            }
        }

//        int querID = (int) dataVector.get(selectedRowIndex).get(0);
//        String funder = (String) dataVector.get(selectedRowIndex).get(1);
//        int propBusId = (int) dataVector.get(selectedRowIndex).get(2);
//        String borrowerId = (String) dataVector.get(selectedRowIndex).get(3);
    }

    public void popWorkReq() {
        DefaultTableModel model = (DefaultTableModel) tabWorkRequests.getModel();
        model.setRowCount(0);
        for (Network nw : system.getNetworkList()) {
            if ("Boston".equalsIgnoreCase(nw.getNetworkName())) {

                for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.CUSTOMERSUPPORTENTERPRISE) {
                        CustomerSupportEnterprise cse = (CustomerSupportEnterprise) ent;

                        Map<Integer, Employee> employeeDirectory = cse.getEmployeeDirectory();
                        Employee queryManager = employeeDirectory.get(1);

                        Map<Integer, WorkRequest> personWorkQueue = queryManager.getPersonWorkQueue();

                        for (Map.Entry<Integer, WorkRequest> entry : personWorkQueue.entrySet()) {
                            Object key = entry.getKey();
                            Object val = entry.getValue();

                            Object[] row = new Object[7];

                            row[0] = entry.getKey();
                            row[1] = entry.getValue().getSender();
                            row[2] = entry.getValue().getReceiver();
                            row[3] = entry.getValue().getSenderOrg();
                            row[4] = entry.getValue().getReceiverOrg();
                            row[5] = entry.getValue().getMessage();
                            row[6] = entry.getValue().getStatus();

                            model.addRow(row);

                        }

                    }
                }

            }
        }
    }

}
