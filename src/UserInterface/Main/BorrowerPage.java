/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserInterface.Main;

import Business.DB4OUtil.DB4OUtil;
import BusinessReliefPortal.Borrower.Borrower;
import BusinessReliefPortal.Employee.Employee;
import BusinessReliefPortal.Enterprise.CustomerSupportEnterprise;
import BusinessReliefPortal.Enterprise.Enterprise;
import BusinessReliefPortal.Enterprise.ProposalManagementEnterprise;
import BusinessReliefPortal.Enterprise.UserAndVerificationEnterprise;
import BusinessReliefPortal.Mail;
import BusinessReliefPortal.Network.Network;
import BusinessReliefPortal.Organization.Organization;
import BusinessReliefPortal.Organization.QueryResolutionOrg;
import BusinessReliefPortal.Proposal.Proposal;
import BusinessReliefPortal.UserAccount.UserAccount;
import BusinessReliefPortal.WorkRequest.WorkRequest;
import java.awt.Image;
import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ishitajanwale
 */
public class BorrowerPage extends javax.swing.JFrame {

    BusinessReliefPortal.BusinessReliefSystem system;

    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    static String borrowerID;
    public String imagePath;
    public String agreementPath;

    /**
     * Creates new form BorrowerPage
     */
    public BorrowerPage(String borrowerId) {
        initComponents();
        borrowerID = borrowerId;
        system = LoginPage.system;
        lblCogratsMessage.setVisible(false);
        popBorrowerDetails();
        txtBorrowerId.setText(borrowerId);
        txtBorrwerNameatDisplay.setText(borrowerId);
        setSize(800, 800);

        popBorrowerProposals();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelBorrowerHome = new javax.swing.JPanel();
        lblBorrowerName = new javax.swing.JLabel();
        lblBorrowerStatus = new javax.swing.JLabel();
        lblProfilePic = new javax.swing.JLabel();
        txtBorrowerName = new javax.swing.JTextField();
        txtBorrowerEmail = new javax.swing.JTextField();
        btnUpdateBorrowerInfo = new javax.swing.JButton();
        btnUpdateProfilePic = new javax.swing.JButton();
        txtBorrowerStatus = new javax.swing.JTextField();
        lblBorrowerEmail1 = new javax.swing.JLabel();
        lblBorrowerHeadcount = new javax.swing.JLabel();
        txtBorrowerHeadcount = new javax.swing.JTextField();
        lblBorrowerSalary = new javax.swing.JLabel();
        txtBorrowerSalary = new javax.swing.JTextField();
        lblBorrowerRevenue = new javax.swing.JLabel();
        txtBorrowerRevenue = new javax.swing.JTextField();
        lblCogratsMessage = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblBusinessName = new javax.swing.JLabel();
        lblBusinessDescription = new javax.swing.JLabel();
        lblBusinessLocation = new javax.swing.JLabel();
        lblEmployeeCount = new javax.swing.JLabel();
        lblTotRevenue = new javax.swing.JLabel();
        lblAvgSalary = new javax.swing.JLabel();
        lblFundsRequested = new javax.swing.JLabel();
        txtBusinessName = new javax.swing.JTextField();
        txtBusinessLoc = new javax.swing.JTextField();
        txtTotalEmp = new javax.swing.JTextField();
        txtTotalSal = new javax.swing.JTextField();
        txtTotalRev = new javax.swing.JTextField();
        txtFundsReq = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtBusinessDes = new javax.swing.JTextArea();
        btnSubmitProposal = new javax.swing.JButton();
        txtBorrowerId = new javax.swing.JTextField();
        lblBorrowerID = new javax.swing.JLabel();
        btnUploadAgreement = new javax.swing.JButton();
        txtAgreementPath = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblProposalStatus = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBorrowerProposals = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        panelWorkRequests = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabWorkRequests = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtBorrwerNameatDisplay = new javax.swing.JTextField();
        panQueryManagement = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtQuery = new javax.swing.JTextArea();
        btnSendRequest = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabQueries = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btnLogout3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1000, 1000));
        setMinimumSize(new java.awt.Dimension(1000, 1000));
        setPreferredSize(new java.awt.Dimension(1000, 1000));

        jTabbedPane1.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1000, 1000));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1000, 1000));

        panelBorrowerHome.setMaximumSize(new java.awt.Dimension(1000, 1000));
        panelBorrowerHome.setMinimumSize(new java.awt.Dimension(1000, 1000));
        panelBorrowerHome.setPreferredSize(new java.awt.Dimension(1000, 1000));
        panelBorrowerHome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblBorrowerName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerName.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/id-card.png"))); // NOI18N
        lblBorrowerName.setText("Borrower Name");
        panelBorrowerHome.add(lblBorrowerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 47, 231, -1));

        lblBorrowerStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBorrowerStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/status.png"))); // NOI18N
        lblBorrowerStatus.setText("Status :");
        panelBorrowerHome.add(lblBorrowerStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 558, 239, -1));

        lblProfilePic.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 171, 214)));
        panelBorrowerHome.add(lblProfilePic, new org.netbeans.lib.awtextra.AbsoluteConstraints(721, 45, 259, 230));

        txtBorrowerName.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrowerName.setForeground(new java.awt.Color(255, 255, 255));
        txtBorrowerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBorrowerNameActionPerformed(evt);
            }
        });
        panelBorrowerHome.add(txtBorrowerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, 217, 41));

        txtBorrowerEmail.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerEmail.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrowerEmail.setForeground(new java.awt.Color(255, 255, 255));
        txtBorrowerEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBorrowerEmailActionPerformed(evt);
            }
        });
        panelBorrowerHome.add(txtBorrowerEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 151, 217, 41));

        btnUpdateBorrowerInfo.setBackground(new java.awt.Color(0, 171, 214));
        btnUpdateBorrowerInfo.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnUpdateBorrowerInfo.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateBorrowerInfo.setText("Update Details");
        btnUpdateBorrowerInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBorrowerInfoActionPerformed(evt);
            }
        });
        panelBorrowerHome.add(btnUpdateBorrowerInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 466, 217, 41));

        btnUpdateProfilePic.setText("Update Picture");
        btnUpdateProfilePic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProfilePicActionPerformed(evt);
            }
        });
        panelBorrowerHome.add(btnUpdateProfilePic, new org.netbeans.lib.awtextra.AbsoluteConstraints(807, 310, -1, 41));

        txtBorrowerStatus.setEditable(false);
        txtBorrowerStatus.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerStatus.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrowerStatus.setForeground(new java.awt.Color(255, 255, 255));
        txtBorrowerStatus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBorrowerStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBorrowerStatusActionPerformed(evt);
            }
        });
        panelBorrowerHome.add(txtBorrowerStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 569, 217, 43));

        lblBorrowerEmail1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerEmail1.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerEmail1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/email.png"))); // NOI18N
        lblBorrowerEmail1.setText("Borrower Email");
        panelBorrowerHome.add(lblBorrowerEmail1, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 129, 245, 63));

        lblBorrowerHeadcount.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerHeadcount.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerHeadcount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/group.png"))); // NOI18N
        lblBorrowerHeadcount.setText("HeadCount");
        panelBorrowerHome.add(lblBorrowerHeadcount, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 210, 245, 63));

        txtBorrowerHeadcount.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerHeadcount.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrowerHeadcount.setForeground(new java.awt.Color(255, 255, 255));
        txtBorrowerHeadcount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBorrowerHeadcountActionPerformed(evt);
            }
        });
        panelBorrowerHome.add(txtBorrowerHeadcount, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 232, 217, 41));

        lblBorrowerSalary.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerSalary.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerSalary.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/revenue.png"))); // NOI18N
        lblBorrowerSalary.setText("Employee Avg Salary");
        panelBorrowerHome.add(lblBorrowerSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 291, 282, 63));

        txtBorrowerSalary.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerSalary.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrowerSalary.setForeground(new java.awt.Color(255, 255, 255));
        txtBorrowerSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBorrowerSalaryActionPerformed(evt);
            }
        });
        panelBorrowerHome.add(txtBorrowerSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 313, 217, 41));

        lblBorrowerRevenue.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerRevenue.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerRevenue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/loan.png"))); // NOI18N
        lblBorrowerRevenue.setText("Total Revenue");
        panelBorrowerHome.add(lblBorrowerRevenue, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 372, 282, 63));

        txtBorrowerRevenue.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerRevenue.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrowerRevenue.setForeground(new java.awt.Color(255, 255, 255));
        txtBorrowerRevenue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBorrowerRevenueActionPerformed(evt);
            }
        });
        panelBorrowerHome.add(txtBorrowerRevenue, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 394, 217, 41));

        lblCogratsMessage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 171, 214)));
        panelBorrowerHome.add(lblCogratsMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(721, 446, 259, 190));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/istockphoto-1281736074-612x612 (1).jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        panelBorrowerHome.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 980));

        jTabbedPane1.addTab("Home", panelBorrowerHome);

        jPanel1.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 1000));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblBusinessName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBusinessName.setForeground(new java.awt.Color(0, 171, 214));
        lblBusinessName.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/business.png"))); // NOI18N
        lblBusinessName.setText("Business Name");
        jPanel1.add(lblBusinessName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 355, 70));

        lblBusinessDescription.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBusinessDescription.setForeground(new java.awt.Color(0, 171, 214));
        lblBusinessDescription.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/document.png"))); // NOI18N
        lblBusinessDescription.setText("Business Description");
        jPanel1.add(lblBusinessDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 355, -1));

        lblBusinessLocation.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBusinessLocation.setForeground(new java.awt.Color(0, 171, 214));
        lblBusinessLocation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/pin.png"))); // NOI18N
        lblBusinessLocation.setText("Business Location");
        jPanel1.add(lblBusinessLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 250, 355, 72));

        lblEmployeeCount.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblEmployeeCount.setForeground(new java.awt.Color(0, 171, 214));
        lblEmployeeCount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/businessman (1).png"))); // NOI18N
        lblEmployeeCount.setText("Total Employees");
        jPanel1.add(lblEmployeeCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 340, 355, 70));

        lblTotRevenue.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblTotRevenue.setForeground(new java.awt.Color(0, 171, 214));
        lblTotRevenue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/profits.png"))); // NOI18N
        lblTotRevenue.setText("Total Revenue");
        jPanel1.add(lblTotRevenue, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 420, 355, 70));

        lblAvgSalary.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblAvgSalary.setForeground(new java.awt.Color(0, 171, 214));
        lblAvgSalary.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/wages.png"))); // NOI18N
        lblAvgSalary.setText("Employee Average Salary");
        jPanel1.add(lblAvgSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 500, 355, 70));

        lblFundsRequested.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblFundsRequested.setForeground(new java.awt.Color(0, 171, 214));
        lblFundsRequested.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/gross.png"))); // NOI18N
        lblFundsRequested.setText("Enter the amount of funds you require");
        jPanel1.add(lblFundsRequested, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 580, 355, 70));

        txtBusinessName.setBackground(new java.awt.Color(0, 171, 214));
        txtBusinessName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBusinessName.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtBusinessName, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 100, 257, 37));

        txtBusinessLoc.setBackground(new java.awt.Color(0, 171, 214));
        txtBusinessLoc.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBusinessLoc.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtBusinessLoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 270, 257, 37));

        txtTotalEmp.setEditable(false);
        txtTotalEmp.setBackground(new java.awt.Color(0, 171, 214));
        txtTotalEmp.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtTotalEmp.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtTotalEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 350, 257, 37));

        txtTotalSal.setEditable(false);
        txtTotalSal.setBackground(new java.awt.Color(0, 171, 214));
        txtTotalSal.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtTotalSal.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtTotalSal, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 510, 257, 37));

        txtTotalRev.setEditable(false);
        txtTotalRev.setBackground(new java.awt.Color(0, 171, 214));
        txtTotalRev.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtTotalRev.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtTotalRev, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 430, 257, 37));

        txtFundsReq.setBackground(new java.awt.Color(0, 171, 214));
        txtFundsReq.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtFundsReq.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtFundsReq, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 600, 257, 37));

        txtBusinessDes.setBackground(new java.awt.Color(0, 171, 214));
        txtBusinessDes.setColumns(20);
        txtBusinessDes.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBusinessDes.setForeground(new java.awt.Color(255, 255, 255));
        txtBusinessDes.setRows(5);
        jScrollPane1.setViewportView(txtBusinessDes);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 180, 257, 64));

        btnSubmitProposal.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnSubmitProposal.setForeground(new java.awt.Color(0, 171, 214));
        btnSubmitProposal.setText("Submit Proposal");
        btnSubmitProposal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitProposalActionPerformed(evt);
            }
        });
        jPanel1.add(btnSubmitProposal, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 760, 190, 35));

        txtBorrowerId.setEditable(false);
        txtBorrowerId.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerId.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrowerId.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtBorrowerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 30, 257, 37));

        lblBorrowerID.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerID.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/id-card.png"))); // NOI18N
        lblBorrowerID.setText("Borrower ID");
        jPanel1.add(lblBorrowerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 355, 70));

        btnUploadAgreement.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnUploadAgreement.setForeground(new java.awt.Color(0, 171, 214));
        btnUploadAgreement.setText("Upload Agreement");
        btnUploadAgreement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadAgreementActionPerformed(evt);
            }
        });
        jPanel1.add(btnUploadAgreement, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 680, 355, 37));

        txtAgreementPath.setBackground(new java.awt.Color(0, 171, 214));
        txtAgreementPath.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtAgreementPath.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtAgreementPath, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 670, 257, 37));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/istockphoto-1281736074-612x612 (1).jpg"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 980));

        jTabbedPane1.addTab("Create Proposal", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(lblProposalStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(323, 709, 380, 229));

        tblBorrowerProposals.setBackground(new java.awt.Color(0, 171, 214));
        tblBorrowerProposals.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        tblBorrowerProposals.setForeground(new java.awt.Color(255, 255, 255));
        tblBorrowerProposals.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Proposal ID", "Requested Fund Amount", "Status"
            }
        ));
        jScrollPane2.setViewportView(tblBorrowerProposals);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 120, 988, 286));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/abstract-template-background-white-and-bright-blue-squares-overlapping-with-halftone-and-texture-free-vector (1).jpg"))); // NOI18N
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, 1000, 980));

        jTabbedPane1.addTab("View Status", jPanel2);

        panelWorkRequests.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabWorkRequests.setBackground(new java.awt.Color(0, 171, 214));
        tabWorkRequests.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        tabWorkRequests.setForeground(new java.awt.Color(255, 255, 255));
        tabWorkRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Work Rquest Id", "Sender", "Receiver", "Sender Org", "Receiver Org", "Message", "Status"
            }
        ));
        jScrollPane6.setViewportView(tabWorkRequests);

        panelWorkRequests.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 120, 988, 290));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/white-bright-abstract-background-vector-20802409.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        panelWorkRequests.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 980));

        txtBorrwerNameatDisplay.setText("Borrower Name");
        panelWorkRequests.add(txtBorrwerNameatDisplay, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 172, -1));

        jTabbedPane1.addTab("WorkRequest", panelWorkRequests);

        txtQuery.setColumns(20);
        txtQuery.setRows(5);
        jScrollPane3.setViewportView(txtQuery);

        btnSendRequest.setText("Send Request");
        btnSendRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendRequestActionPerformed(evt);
            }
        });

        tabQueries.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Query ID", "Requestor", "Message"
            }
        ));
        jScrollPane4.setViewportView(tabQueries);

        javax.swing.GroupLayout panQueryManagementLayout = new javax.swing.GroupLayout(panQueryManagement);
        panQueryManagement.setLayout(panQueryManagementLayout);
        panQueryManagementLayout.setHorizontalGroup(
            panQueryManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panQueryManagementLayout.createSequentialGroup()
                .addGroup(panQueryManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panQueryManagementLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panQueryManagementLayout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(btnSendRequest))
                    .addGroup(panQueryManagementLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(310, Short.MAX_VALUE))
        );
        panQueryManagementLayout.setVerticalGroup(
            panQueryManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panQueryManagementLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSendRequest)
                .addGap(58, 58, 58)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(588, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Query Management", panQueryManagement);

        jPanel5.setBackground(new java.awt.Color(0, 171, 214));

        btnLogout3.setBackground(new java.awt.Color(0, 171, 214));
        btnLogout3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logout (3).png"))); // NOI18N
        btnLogout3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogout3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Borrower Page");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(357, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(304, 304, 304)
                .addComponent(btnLogout3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnLogout3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitProposalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitProposalActionPerformed
        // TODO add your handling code here:
        Employee propAdmin = null;
        if (txtBusinessName.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Business Name");
            return;
        } else if (txtBusinessDes.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Business Revenue");
            return;
        } else if (txtBusinessLoc.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Business Location");
            return;
        } else if (txtFundsReq.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Total Funds Required");
            return;
        } else if (txtTotalEmp.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Total Number of Employees");
            return;
        } else if (txtTotalRev.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Total Revenue");
            return;
        } else if (txtTotalSal.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Average Salary of Employees");
            return;
        } else if (txtAgreementPath.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please Upload Agreement Document");
            return;
        } else {
            if (!txtFundsReq.getText().matches("[0-9]+") || Integer.parseInt(txtFundsReq.getText()) < 1 || Integer.parseInt(txtFundsReq.getText()) > 250000) {
                JOptionPane.showMessageDialog(this, "Please request valid funds");
                return;
            }
            if (txtBusinessLoc.getText().matches("[0-9]+")) {
                JOptionPane.showMessageDialog(this, "Please enter valid details");
                return;
            }

            for (Network nw : system.getNetworkList()) {
                if ("Boston".equalsIgnoreCase(nw.getNetworkName())) {
                    for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {

                        if (ent.getEnterpriseType() == Enterprise.EnterpriseType.PROPOSALMANAGEMENTENTERPRISE ) {
                            ProposalManagementEnterprise propEnt = (ProposalManagementEnterprise) ent;
                            propAdmin = propEnt.getEmployeeDirectory().get(1);

                        }

                        if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                            UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;
                            for (Borrower br : userEnt.getBorrowerDirectory()) {
                                if (br.getBorrowerId().equals(borrowerID)) {
                                    //                               txtBorrowerId.setText(String.valueOf(br.getBorrowerId()));
                                    if (br.getActiveStatus().equalsIgnoreCase("Initial")) {
                                        br.setBusinessId(0);
                                        br.setBusinessName(txtBusinessName.getText());
                                        br.setBusinessDescription(txtBusinessDes.getText());
                                        br.setBusinessLocation(txtBusinessLoc.getText());
                                        br.setEmployeeCount(Integer.parseInt(txtTotalEmp.getText()));
                                        br.setRevenue(Double.parseDouble(txtTotalRev.getText()));
                                        br.setEmployeeAverageSalary(Double.parseDouble(txtTotalSal.getText()));
                                        br.setRequestedFund(Double.parseDouble(txtFundsReq.getText()));
                                        br.setAgreementPath(agreementPath);
                                        br.setActiveStatus("Onhold");
                                        popBorrowerDetails();
                                        Proposal propAdd = nw.getProposalDirectory().createProposal("Government", br, "Initiated");
                                        propAdd.setRequestedFundAmount(Double.parseDouble(txtFundsReq.getText()));
                                        
                                        //map proposals
                                        Proposal addProposal = nw.addProposal();
                                        addProposal.setBorrower(br);
                                        addProposal.setProposalStatus("Initiated");

                                       
                                        btnSubmitProposal.setVisible(false);
                                        txtBorrowerId.setEditable(false);
                                        txtBusinessName.setEditable(false);
                                        txtBusinessDes.setEditable(false);
                                        txtBusinessLoc.setEditable(false);
                                        txtTotalEmp.setEditable(false);
                                        txtTotalRev.setEditable(false);
                                        txtTotalSal.setEditable(false);
                                        txtFundsReq.setEditable(false);

                                        //Generate Work Request at Network level
                                        WorkRequest addWorkRequests = nw.genWorkRequests(borrowerID, "PA", UserAccount.RoleType.BORROWER, UserAccount.RoleType.PROPOSALADMIN, Organization.Type.USERIDENTIFYORG, Organization.Type.PROPOSALORG, "RUNNING", " " + br.getBorrowerId() + "raised proposal: " + addProposal.getProposalId() + "");
                                        //  WorkRequest addWorkRequests = nw.addWorkRequests(UserAccount.RoleType.BORROWER, UserAccount.RoleType.PROPOSALADMIN, Organization.Type.USERIDENTIFYORG, Organization.Type.AUDITINGORG, "RUNNING", "Borrower raised a proposal");
                                        //Generate work Request at person level - Borrower in this case
                                        br.addWorkReqToPerson(addWorkRequests);
                                        propAdmin.addWorkReqToPerson(addWorkRequests);
                                        
                                        popBorrowerDetails();
                                        popBorrowerProposals();
                                        
                                        notifyGovtOfBorrowerProposal(propAdd);
                                        

                                        JOptionPane.showMessageDialog(rootPane, "Your Proposal has been sent for verification");
                                        return;
                                    } 
//                                    else if (br.getActiveStatus().equalsIgnoreCase("Onhold") || br.getActiveStatus().equalsIgnoreCase("Active")) 
//                                    {
//                                        popBorrowerDetails();
//                                        // popBorrowerProposals();
//                                        txtBorrowerId.setEditable(false);
//                                        txtBusinessName.setEditable(false);
//                                        txtBusinessDes.setEditable(false);
//                                        txtBusinessLoc.setEditable(false);
//                                        txtTotalEmp.setEditable(false);
//                                        txtTotalRev.setEditable(false);
//                                        txtTotalSal.setEditable(false);
//                                        txtFundsReq.setEditable(false);
//                                        txtAgreementPath.setEditable(false);
//                                        btnSubmitProposal.setVisible(false);
//                                        JOptionPane.showMessageDialog(rootPane, "Your Proposal is Under Verification");
//                                        return;
//                                    } else if (br.getActiveStatus().equalsIgnoreCase("Onhold") || br.getActiveStatus().equalsIgnoreCase("Blacklisted")) 
//                                    {
//                                        popBorrowerDetails();
//                                        // popBorrowerProposals();
//                                        txtBorrowerId.setEditable(false);
//                                        txtBusinessName.setEditable(false);
//                                        txtBusinessDes.setEditable(false);
//                                        txtBusinessLoc.setEditable(false);
//                                        txtTotalEmp.setEditable(false);
//                                        txtTotalRev.setEditable(false);
//                                        txtTotalSal.setEditable(false);
//                                        txtFundsReq.setEditable(false);
//                                        btnSubmitProposal.setVisible(false);
//                                        JOptionPane.showMessageDialog(rootPane, "You are blacklisted");
//                                        return;
//                                    }
                                }

                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnSubmitProposalActionPerformed

    private void txtBorrowerEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBorrowerEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBorrowerEmailActionPerformed

    private void btnUpdateProfilePicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProfilePicActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename;
        if (f == null) {
            filename = imagePath;
        } else {
            filename = f.getAbsolutePath();
            imagePath = filename;
            ImageIcon icon = new ImageIcon(imagePath);
            Image image = icon.getImage().getScaledInstance(lblProfilePic.getWidth(), lblProfilePic.getHeight(), Image.SCALE_SMOOTH);
            lblProfilePic.setIcon(icon);
        }
    }//GEN-LAST:event_btnUpdateProfilePicActionPerformed


    private void btnUpdateBorrowerInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBorrowerInfoActionPerformed
        // TODO add your handling code here:
        if (txtBorrowerName.getText().isEmpty() || txtBorrowerEmail.getText().isEmpty() || imagePath == null
                || txtBorrowerHeadcount.getText().isEmpty()
                || txtBorrowerRevenue.getText().isEmpty()
                || txtBorrowerSalary.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill all the fields..");
            return;
        }
        if (!txtBorrowerHeadcount.getText().matches("[0-9]+") || Integer.parseInt(txtBorrowerHeadcount.getText()) < 1) {
            JOptionPane.showMessageDialog(this, "Please enter valid details...Atleast one employee is required");
            return;
        }
        if (!txtBorrowerRevenue.getText().matches("[0-9]+") || Integer.parseInt(txtBorrowerRevenue.getText()) <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter valid details...Our system requires revenue more that zero to be eligible.");
            return;
        }
        if (!txtBorrowerSalary.getText().matches("[0-9]+") || Integer.parseInt(txtBorrowerSalary.getText()) <= 0) {
            JOptionPane.showMessageDialog(this, "Please enter valid details...Our system requires Average salary more than zero");
            return;
        } else {
            String regexPattern = "^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@"
                    + "[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$";
            if (!txtBorrowerEmail.getText().matches(regexPattern)) {
                JOptionPane.showMessageDialog(this, "Please enter a valid email address");
                return;
            }
            for (Network nw : system.getNetworkList()) {
                if ("Boston".equalsIgnoreCase(nw.getNetworkName())) {
                    for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                        if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                            UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;
                            for (Borrower br : userEnt.getBorrowerDirectory()) {
                                if (br.getBorrowerId().equals(borrowerID)) {
                                    if (!br.getActiveStatus().equalsIgnoreCase("Initial")) {
                                        JOptionPane.showMessageDialog(this, "Can't update details");
                                        popBorrowerDetails();
                                        return;

                                    }
                                    br.setName(String.valueOf(txtBorrowerName.getText()));
                                    br.setEmail(txtBorrowerEmail.getText());
                                    br.setProfilePic(imagePath);
                                    br.setEmployeeCount(Integer.parseInt(txtBorrowerHeadcount.getText()));
                                    br.setRevenue(Float.parseFloat(txtBorrowerRevenue.getText()));
                                    br.setEmployeeAverageSalary(Float.parseFloat(txtBorrowerSalary.getText()));
                                    popBorrowerDetails();
                                    JOptionPane.showMessageDialog(this, "Your Details have been successfully Updated");
                                    return;
                                }
                            }

                        }
                    }
                }
            }

        }
    }//GEN-LAST:event_btnUpdateBorrowerInfoActionPerformed

    private void txtBorrowerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBorrowerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBorrowerNameActionPerformed

    private void btnLogout3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogout3ActionPerformed
        // TODO add your handling code here:
        LoginPage lp = new LoginPage();
        lp.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnLogout3ActionPerformed

    private void txtBorrowerStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBorrowerStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBorrowerStatusActionPerformed

    private void txtBorrowerHeadcountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBorrowerHeadcountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBorrowerHeadcountActionPerformed

    private void txtBorrowerSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBorrowerSalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBorrowerSalaryActionPerformed

    private void txtBorrowerRevenueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBorrowerRevenueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBorrowerRevenueActionPerformed

    private void btnUploadAgreementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadAgreementActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename;
        if (f == null) {
            filename = agreementPath;
        } else {
            filename = f.getAbsolutePath();
            agreementPath = filename;
            txtAgreementPath.setText(agreementPath);
//            ImageIcon icon = new ImageIcon(agreementPath);
//            Image image = icon.getImage().getScaledInstance(lblProfilePic.getWidth(), lblProfilePic.getHeight(), Image.SCALE_SMOOTH);
//            lblProfilePic.setIcon(icon);
        }
    }//GEN-LAST:event_btnUploadAgreementActionPerformed

    private void btnSendRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendRequestActionPerformed
        // TODO add your handling code here:
        Employee queryManager = null;
        QueryResolutionOrg queryAdd = null;
        for (Network nw : system.getNetworkList()) {
            if ("Boston".equals(nw.getNetworkName())) {
                for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {

                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.CUSTOMERSUPPORTENTERPRISE && queryAdd == null) {
                        CustomerSupportEnterprise custEnt = (CustomerSupportEnterprise) ent;

                        queryManager = custEnt.getEmployeeDirectory().get(1);
                        queryAdd = new QueryResolutionOrg(borrowerID, txtQuery.getText());
                        nw.addQueriesToNetwork(queryAdd);
                    }

                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                        UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;
                        ArrayList<Borrower> borrowerDirectory = userEnt.getBorrowerDirectory();
                        for (Borrower br : borrowerDirectory) {
                            if (br.getBorrowerId().equals(borrowerID)) {

                                WorkRequest workReqAdd = nw.genWorkRequests(borrowerID, "QM", UserAccount.RoleType.BORROWER, UserAccount.RoleType.QUERYMANAGER, Organization.Type.USERIDENTIFYORG, Organization.Type.QUERYRESOLUTIONORG, "Intitated", "" + borrowerID + " query request");
                                br.addWorkReqToPerson(workReqAdd);
                                queryManager.addWorkReqToPerson(workReqAdd);

                                br.addQueryToPerson(queryAdd);

                                popWorkReqTab(br.getPersonWorkQueue());
                                popQueries(br.getPersonQueries());
                                return;
                            }

                        }
                    }
                }
            }

        }
    }//GEN-LAST:event_btnSendRequestActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BorrowerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BorrowerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BorrowerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BorrowerPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BorrowerPage(borrowerID).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogout3;
    private javax.swing.JButton btnSendRequest;
    private javax.swing.JButton btnSubmitProposal;
    private javax.swing.JButton btnUpdateBorrowerInfo;
    private javax.swing.JButton btnUpdateProfilePic;
    private javax.swing.JButton btnUploadAgreement;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblAvgSalary;
    private javax.swing.JLabel lblBorrowerEmail1;
    private javax.swing.JLabel lblBorrowerHeadcount;
    private javax.swing.JLabel lblBorrowerID;
    private javax.swing.JLabel lblBorrowerName;
    private javax.swing.JLabel lblBorrowerRevenue;
    private javax.swing.JLabel lblBorrowerSalary;
    private javax.swing.JLabel lblBorrowerStatus;
    private javax.swing.JLabel lblBusinessDescription;
    private javax.swing.JLabel lblBusinessLocation;
    private javax.swing.JLabel lblBusinessName;
    private javax.swing.JLabel lblCogratsMessage;
    private javax.swing.JLabel lblEmployeeCount;
    private javax.swing.JLabel lblFundsRequested;
    private javax.swing.JLabel lblProfilePic;
    private javax.swing.JLabel lblProposalStatus;
    private javax.swing.JLabel lblTotRevenue;
    private javax.swing.JPanel panQueryManagement;
    private javax.swing.JPanel panelBorrowerHome;
    private javax.swing.JPanel panelWorkRequests;
    private javax.swing.JTable tabQueries;
    private javax.swing.JTable tabWorkRequests;
    private javax.swing.JTable tblBorrowerProposals;
    private javax.swing.JTextField txtAgreementPath;
    private javax.swing.JTextField txtBorrowerEmail;
    private javax.swing.JTextField txtBorrowerHeadcount;
    private javax.swing.JTextField txtBorrowerId;
    private javax.swing.JTextField txtBorrowerName;
    private javax.swing.JTextField txtBorrowerRevenue;
    private javax.swing.JTextField txtBorrowerSalary;
    private javax.swing.JTextField txtBorrowerStatus;
    private javax.swing.JTextField txtBorrwerNameatDisplay;
    private javax.swing.JTextArea txtBusinessDes;
    private javax.swing.JTextField txtBusinessLoc;
    private javax.swing.JTextField txtBusinessName;
    private javax.swing.JTextField txtFundsReq;
    private javax.swing.JTextArea txtQuery;
    private javax.swing.JTextField txtTotalEmp;
    private javax.swing.JTextField txtTotalRev;
    private javax.swing.JTextField txtTotalSal;
    // End of variables declaration//GEN-END:variables

      private void popQueries(Map<Integer, QueryResolutionOrg> personQueries) {
        DefaultTableModel model = (DefaultTableModel) tabQueries.getModel();
        model.setRowCount(0);

        for (Map.Entry<Integer, QueryResolutionOrg> entry : personQueries.entrySet()) {
            Object key = entry.getKey();
            Object val = entry.getValue();

            Object[] row = new Object[3];

            row[0] = entry.getKey();
            row[1] = entry.getValue().getRequestor();
            row[2] = entry.getValue().getMessage();

            model.addRow(row);

        }
    }
    
    private void popWorkReqTab(Map<Integer, WorkRequest> personWorkIDs) {
        DefaultTableModel model = (DefaultTableModel) tabWorkRequests.getModel();
        model.setRowCount(0);

        for (Map.Entry<Integer, WorkRequest> entry : personWorkIDs.entrySet()) {
            Object key = entry.getKey();
            Object val = entry.getValue();

            Object[] row = new Object[7];
            row[0] = entry.getKey();
            row[1] = entry.getValue().getSender();
            row[2] = entry.getValue().getReceiver();
            row[3] = entry.getValue().getSenderOrg();
            row[4] = entry.getValue().getReceiverOrg();
            row[5] = entry.getValue().getMessage();
            row[6] = entry.getValue().getStatus();

            model.addRow(row);
        }

    }

    private void popBorrowerDetails() {
        for (Network nw : system.getNetworkList()) {
            if ("Boston".equalsIgnoreCase(nw.getNetworkName())) {
                for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                        UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;
                        for (Borrower br : userEnt.getBorrowerDirectory()) {
                            if (br.getBorrowerId().equals(borrowerID)) {
                                Map<Integer, WorkRequest> personWorkIDs = br.getPersonWorkQueue();

                                popWorkReqTab(personWorkIDs);
//                               txtBorrowerId.setText(String.valueOf(br.getBorrowerId()));
                                if (!br.getActiveStatus().equalsIgnoreCase("Initial")) {
                                    btnSubmitProposal.setVisible(false);
                                    btnUploadAgreement.setVisible(false);
                                    btnUpdateBorrowerInfo.setVisible(false);
                                }
                                if (br.getActiveStatus().equalsIgnoreCase("Fund Request Approved")) {
                                    lblCogratsMessage.setVisible(true);
                                    lblCogratsMessage.setText("Congratualations");
                                }

                                txtBorrowerStatus.setText(br.getActiveStatus());
                                txtBorrowerStatus.setEditable(false);
                                txtBorrowerId.setEditable(false);
                                txtBusinessName.setText(String.valueOf(br.getBusinessName()));
                                txtBusinessDes.setText(String.valueOf(br.getBusinessDescription()));
                                txtBusinessLoc.setText(String.valueOf(br.getBusinessLocation()));
                                txtTotalEmp.setText(String.valueOf(br.getEmployeeCount()));
                                txtTotalRev.setText(String.valueOf(br.getRevenue()));
                                txtTotalSal.setText(String.valueOf(br.getEmployeeAverageSalary()));
                                txtBorrowerHeadcount.setText(String.valueOf(br.getEmployeeCount()));
                                txtBorrowerRevenue.setText(String.valueOf(br.getRevenue()));
                                txtBorrowerSalary.setText(String.valueOf(br.getEmployeeAverageSalary()));
                                txtFundsReq.setText(String.valueOf(br.getRequestedFund()));
                                txtBorrowerName.setText(String.valueOf(br.getName()));
                                txtBorrowerEmail.setText(String.valueOf(br.getEmail()));
                                txtAgreementPath.setText(String.valueOf(br.getAgreementPath()));
                                imagePath = br.getProfilePic();
                                ImageIcon icon = new ImageIcon(imagePath);
                                Image image = icon.getImage().getScaledInstance(lblProfilePic.getWidth(), lblProfilePic.getHeight(), Image.SCALE_SMOOTH);
                                lblProfilePic.setIcon(icon);
                                return;
                            }

                        }
                    }

                }
            }
        }
    }

    private void popBorrowerProposals() {
        DefaultTableModel model = (DefaultTableModel) tblBorrowerProposals.getModel();
        model.setRowCount(0);
        Object[] row = new Object[3];
        for (Network nw : system.getNetworkList()) {
            if ("Boston".equals(nw.getNetworkName())) {
                for (Proposal pr : nw.getProposalDirectory().getProposalDirectory()) {
                    if (borrowerID.equalsIgnoreCase(pr.getBorrower().getBorrowerId())) {
                        row[0] = pr;
                        row[1] = pr.getRequestedFundAmount();
                        row[2] = pr.getProposalStatus();

                        model.addRow(row);
                    }
                }
            }
        }

    }

    private void notifyGovtOfBorrowerProposal(Proposal prop) {
        String Bname = txtBusinessName.getText();
        String Bdescription = txtBusinessDes.getText();
        String Bloc = txtBusinessLoc.getText();
        String Bemp = txtTotalEmp.getText();
        String Brev = txtTotalRev.getText();
        String Bsal = txtTotalSal.getText();
        String Bfunds = txtFundsReq.getText();

        try {
            FileWriter Writer = new FileWriter(borrowerID + ".txt", true);

            Writer.write("Hello the Borrower Details are:");
            Writer.write("\n");
            Writer.write("Business name \t");
            Writer.write(Bname);
            Writer.write("\n");
            Writer.write("Business Description \t");
            Writer.write(Bdescription);
            Writer.write("\n");
            Writer.write("Business Location \t");
            Writer.write(Bloc);
            Writer.write("\n");
            Writer.write("Number of Employees\t");
            Writer.write(Bemp);
            Writer.write("\n");
            Writer.write("Business revenue \t");
            Writer.write(Brev);
            Writer.write("\n");
            Writer.write("Employee Average Salaries \t");
            Writer.write(Bsal);
            Writer.write("\n");
            Writer.write("Business Funds \t");
            Writer.write(Bfunds);
            Writer.write("\n");

            Writer.close();
            JOptionPane.showMessageDialog(null, "Successfully saved");
            try {
                Mail mail = new Mail();
                String emailSubject = "New Proposal Created!!!";
                String emailBody = "New Proposal Created!!! Proposal ID: " + String.valueOf(prop.getProposalId() + "created for Borrower " + String.valueOf(prop.getBorrower().getBorrowerId()));
                String recipient = txtBorrowerEmail.getText();
//                /Users/ritvikparamkusham/Documents/GitHub/Business Releif Program/AED_Business_Relief_Program/BusinessReliefPortal/Borrower3.txt
                String filePath = "/Users/ritvikparamkusham/Documents/GitHub/Business Releif Program/AED_Business_Relief_Program/BusinessReliefPortal/" + String.valueOf(borrowerID) + ".txt";
                mail.preparetoSendEmail(emailSubject, emailBody, recipient, filePath);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Mail will be sent");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "File will be created ");
        }
    }
}
