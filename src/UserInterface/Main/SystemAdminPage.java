/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserInterface.Main;

import Business.DB4OUtil.DB4OUtil;
import BusinessReliefPortal.Business.Business;
import BusinessReliefPortal.Enterprise.BusinessEnterprise;
import BusinessReliefPortal.Enterprise.Enterprise;
import BusinessReliefPortal.Enterprise.UserAndVerificationEnterprise;
import BusinessReliefPortal.Lender.Lender;
import BusinessReliefPortal.Borrower.Borrower;
import BusinessReliefPortal.Network.Network;
import BusinessReliefPortal.Organization.Organization;
import BusinessReliefPortal.Organization.TreasuryOrg;
import BusinessReliefPortal.Proposal.Proposal;
import BusinessReliefPortal.WorkRequest.WorkRequest;
import static UserInterface.Main.BorrowerPage.borrowerID;
import static UserInterface.Main.LenderPage.lenderID;
import java.awt.Image;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Map;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;
import java.awt.BorderLayout;
import java.util.HashMap;

/**
 *
 * @author ishitajanwale
 */
public class SystemAdminPage extends javax.swing.JFrame {

    /**
     * Creates new form SystemAdminPage
     */
    BusinessReliefPortal.BusinessReliefSystem system;

    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();

    public SystemAdminPage() {
        initComponents();
        system = LoginPage.system;
        popLenderTable();
        popBorrowerTable();
        popFunds();
        popBorrowerProposals();
        populateFundsGraph();
        populateBusinessGraph();
        popBusinessTab();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelViewLenders = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLender = new javax.swing.JTable();
        lblLenderBusiness = new javax.swing.JLabel();
        lblLenderName = new javax.swing.JLabel();
        lblLenderRevenue = new javax.swing.JLabel();
        lblLenderIncomeTax = new javax.swing.JLabel();
        lblFundedAmt = new javax.swing.JLabel();
        lblROI = new javax.swing.JLabel();
        lblLenderInterestDate = new javax.swing.JLabel();
        txtLenderName = new javax.swing.JTextField();
        txtLenderBusinessName = new javax.swing.JTextField();
        txtLenderFundingAmt = new javax.swing.JTextField();
        txtLenderTotalRevenue = new javax.swing.JTextField();
        txtLenderIncomeTax = new javax.swing.JTextField();
        txtLenderInterestRate = new javax.swing.JTextField();
        txtLenderInterestStartTime = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtLenderStatus = new javax.swing.JTextField();
        lblLenderStatus = new javax.swing.JLabel();
        txtLenderSupportedBusinessID = new javax.swing.JTextField();
        lblLenderSupportedBusinessID = new javax.swing.JLabel();
        lblLenderID = new javax.swing.JLabel();
        txtLenderID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        panelViewBorrowers = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBorrower = new javax.swing.JTable();
        lblBorrowerID = new javax.swing.JLabel();
        lblBorrowerName = new javax.swing.JLabel();
        lblBorrowerBussname = new javax.swing.JLabel();
        lblBorrowerBusinessDesc = new javax.swing.JLabel();
        lblBorrowerEmpCOunt = new javax.swing.JLabel();
        lblBorrowerRevenue = new javax.swing.JLabel();
        lblBorrowerReqFunds = new javax.swing.JLabel();
        lblBorrowerEmpSalary = new javax.swing.JLabel();
        lblBorrowerBussLoc = new javax.swing.JLabel();
        txtBorrowerName = new javax.swing.JTextField();
        txtBorrowerID = new javax.swing.JTextField();
        txtBorrowerBussName = new javax.swing.JTextField();
        txtBorrowerBussDescription = new javax.swing.JTextField();
        txtBorrowerEmpCount = new javax.swing.JTextField();
        txtBorrowerRevenue = new javax.swing.JTextField();
        txtBorrowerEmpSalary = new javax.swing.JTextField();
        txtBorrowerReqFunds = new javax.swing.JTextField();
        txtBorrowerBussLoc = new javax.swing.JTextField();
        btnBorrowerView = new javax.swing.JButton();
        btnBorrowerUpdate = new javax.swing.JButton();
        btnBorrowerDelete = new javax.swing.JButton();
        txtBorrowerStatus = new javax.swing.JTextField();
        lblBorrowerStatus = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        panViewBusiness = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabBusinessView = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtBusDesUpd = new javax.swing.JTextField();
        txtBusNameUpd = new javax.swing.JTextField();
        lblBusName1 = new javax.swing.JLabel();
        lblBusType1 = new javax.swing.JLabel();
        jrbEssBusUpd = new javax.swing.JRadioButton();
        jrbNonEssBusUpd = new javax.swing.JRadioButton();
        txtBusLenderId = new javax.swing.JTextField();
        lblBusLoc1 = new javax.swing.JLabel();
        btnUpdateBusines = new javax.swing.JButton();
        txtbusinessIdInvisible = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        panelViewFunds = new javax.swing.JPanel();
        lblTotalFunds = new javax.swing.JLabel();
        lblEssentailFunds = new javax.swing.JLabel();
        lblNonEssentialFunds = new javax.swing.JLabel();
        txtTotalFunds = new javax.swing.JTextField();
        txtEssentialFunds = new javax.swing.JTextField();
        txtNonEssentailFunds = new javax.swing.JTextField();
        btnFundsUpdate = new javax.swing.JButton();
        sliSplitFunds = new javax.swing.JSlider();
        lblTotalFunds1 = new javax.swing.JLabel();
        panelViewProposals = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblProposals = new javax.swing.JTable();
        lblFunderID = new javax.swing.JLabel();
        lblBorrower = new javax.swing.JLabel();
        lblProposalStatus = new javax.swing.JLabel();
        lblComments = new javax.swing.JLabel();
        txtFunderID = new javax.swing.JTextField();
        txtBorrower = new javax.swing.JTextField();
        txtProposalStatus = new javax.swing.JTextField();
        txtComments = new javax.swing.JTextField();
        btnViewProposals = new javax.swing.JButton();
        btnUpdateProposals = new javax.swing.JButton();
        btnDeleteProposals = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        panelViewReport = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnLogOut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1500, 1000));
        setMinimumSize(new java.awt.Dimension(1500, 1000));
        setPreferredSize(new java.awt.Dimension(1500, 1000));

        jTabbedPane1.setMaximumSize(new java.awt.Dimension(1500, 1000));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1500, 1000));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1000, 1000));
        jTabbedPane1.setSize(new java.awt.Dimension(1500, 1000));

        panelViewLenders.setForeground(new java.awt.Color(255, 255, 255));
        panelViewLenders.setMaximumSize(new java.awt.Dimension(1000, 1000));
        panelViewLenders.setPreferredSize(new java.awt.Dimension(2000, 2000));
        panelViewLenders.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblLender.setBackground(new java.awt.Color(0, 171, 214));
        tblLender.setForeground(new java.awt.Color(255, 255, 255));
        tblLender.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Lender ID", "Lender Name", "Lender Business", "Lender Supported BusinessID", "Funding Amount", "Revenue", "ITR", "ROI", "Interest Start Time", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblLender);

        panelViewLenders.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 0, 1234, 223));

        lblLenderBusiness.setBackground(new java.awt.Color(255, 255, 255));
        lblLenderBusiness.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblLenderBusiness.setForeground(new java.awt.Color(0, 171, 214));
        lblLenderBusiness.setText("Lender Business Name");
        panelViewLenders.add(lblLenderBusiness, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 374, 173, 37));

        lblLenderName.setBackground(new java.awt.Color(255, 255, 255));
        lblLenderName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblLenderName.setForeground(new java.awt.Color(0, 171, 214));
        lblLenderName.setText("Lender Name");
        panelViewLenders.add(lblLenderName, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 307, 173, 37));

        lblLenderRevenue.setBackground(new java.awt.Color(255, 255, 255));
        lblLenderRevenue.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblLenderRevenue.setForeground(new java.awt.Color(0, 171, 214));
        lblLenderRevenue.setText("Total Revenue");
        panelViewLenders.add(lblLenderRevenue, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 573, 173, 37));

        lblLenderIncomeTax.setBackground(new java.awt.Color(255, 255, 255));
        lblLenderIncomeTax.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblLenderIncomeTax.setForeground(new java.awt.Color(0, 171, 214));
        lblLenderIncomeTax.setText("Income Tax Returns");
        panelViewLenders.add(lblLenderIncomeTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 628, 173, 37));

        lblFundedAmt.setBackground(new java.awt.Color(255, 255, 255));
        lblFundedAmt.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblFundedAmt.setForeground(new java.awt.Color(0, 171, 214));
        lblFundedAmt.setText("Total Funding Amount");
        panelViewLenders.add(lblFundedAmt, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 506, 173, 37));

        lblROI.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblROI.setForeground(new java.awt.Color(0, 171, 214));
        lblROI.setText("Rate of Interest");
        panelViewLenders.add(lblROI, new org.netbeans.lib.awtextra.AbsoluteConstraints(819, 252, 173, 37));

        lblLenderInterestDate.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblLenderInterestDate.setForeground(new java.awt.Color(0, 171, 214));
        lblLenderInterestDate.setText("Interest Start Time");
        panelViewLenders.add(lblLenderInterestDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(819, 307, 173, 37));

        txtLenderName.setBackground(new java.awt.Color(0, 171, 214));
        txtLenderName.setForeground(new java.awt.Color(255, 255, 255));
        txtLenderName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLenderNameActionPerformed(evt);
            }
        });
        panelViewLenders.add(txtLenderName, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 307, 174, 37));

        txtLenderBusinessName.setEditable(false);
        txtLenderBusinessName.setBackground(new java.awt.Color(0, 171, 214));
        txtLenderBusinessName.setForeground(new java.awt.Color(255, 255, 255));
        txtLenderBusinessName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLenderBusinessNameActionPerformed(evt);
            }
        });
        panelViewLenders.add(txtLenderBusinessName, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 374, 174, 37));

        txtLenderFundingAmt.setBackground(new java.awt.Color(0, 171, 214));
        txtLenderFundingAmt.setForeground(new java.awt.Color(255, 255, 255));
        panelViewLenders.add(txtLenderFundingAmt, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 506, 174, 37));

        txtLenderTotalRevenue.setBackground(new java.awt.Color(0, 171, 214));
        txtLenderTotalRevenue.setForeground(new java.awt.Color(255, 255, 255));
        panelViewLenders.add(txtLenderTotalRevenue, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 573, 174, 37));

        txtLenderIncomeTax.setBackground(new java.awt.Color(0, 171, 214));
        txtLenderIncomeTax.setForeground(new java.awt.Color(255, 255, 255));
        panelViewLenders.add(txtLenderIncomeTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 628, 174, 37));

        txtLenderInterestRate.setBackground(new java.awt.Color(0, 171, 214));
        txtLenderInterestRate.setForeground(new java.awt.Color(255, 255, 255));
        panelViewLenders.add(txtLenderInterestRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1034, 252, 174, 37));

        txtLenderInterestStartTime.setBackground(new java.awt.Color(0, 171, 214));
        txtLenderInterestStartTime.setForeground(new java.awt.Color(255, 255, 255));
        panelViewLenders.add(txtLenderInterestStartTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(1034, 307, 174, 37));

        btnView.setBackground(new java.awt.Color(0, 171, 214));
        btnView.setForeground(new java.awt.Color(255, 255, 255));
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        panelViewLenders.add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(921, 477, 139, 32));

        btnUpdate.setBackground(new java.awt.Color(0, 171, 214));
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        panelViewLenders.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(921, 527, 139, 33));

        btnDelete.setBackground(new java.awt.Color(0, 171, 214));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        panelViewLenders.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(921, 578, 139, 33));

        txtLenderStatus.setEditable(false);
        txtLenderStatus.setBackground(new java.awt.Color(0, 171, 214));
        txtLenderStatus.setForeground(new java.awt.Color(255, 255, 255));
        panelViewLenders.add(txtLenderStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(1034, 374, 174, 37));

        lblLenderStatus.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblLenderStatus.setForeground(new java.awt.Color(0, 171, 214));
        lblLenderStatus.setText("Lender Status");
        panelViewLenders.add(lblLenderStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(819, 374, 173, 37));

        txtLenderSupportedBusinessID.setBackground(new java.awt.Color(0, 171, 214));
        txtLenderSupportedBusinessID.setForeground(new java.awt.Color(255, 255, 255));
        panelViewLenders.add(txtLenderSupportedBusinessID, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 439, 174, 37));

        lblLenderSupportedBusinessID.setBackground(new java.awt.Color(255, 255, 255));
        lblLenderSupportedBusinessID.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblLenderSupportedBusinessID.setForeground(new java.awt.Color(0, 171, 214));
        lblLenderSupportedBusinessID.setText("Lender Supported Business ID");
        panelViewLenders.add(lblLenderSupportedBusinessID, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 439, -1, 37));

        lblLenderID.setBackground(new java.awt.Color(255, 255, 255));
        lblLenderID.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblLenderID.setForeground(new java.awt.Color(0, 171, 214));
        lblLenderID.setText("Lender ID");
        panelViewLenders.add(lblLenderID, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 252, 173, 37));

        txtLenderID.setEditable(false);
        txtLenderID.setBackground(new java.awt.Color(0, 171, 214));
        txtLenderID.setForeground(new java.awt.Color(255, 255, 255));
        panelViewLenders.add(txtLenderID, new org.netbeans.lib.awtextra.AbsoluteConstraints(395, 252, 174, 37));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/istockphoto-1281736074-612x612 (2).jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        panelViewLenders.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1500, 980));

        jTabbedPane1.addTab("View Lenders", panelViewLenders);

        panelViewBorrowers.setMaximumSize(new java.awt.Dimension(2000, 2000));
        panelViewBorrowers.setMinimumSize(new java.awt.Dimension(1000, 1000));
        panelViewBorrowers.setPreferredSize(new java.awt.Dimension(1000, 1000));
        panelViewBorrowers.setRequestFocusEnabled(false);
        panelViewBorrowers.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblBorrower.setBackground(new java.awt.Color(0, 171, 214));
        tblBorrower.setForeground(new java.awt.Color(255, 255, 255));
        tblBorrower.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Borrower ID", "Borrower Name", "Business name", "Business Description", "Employee Count", "Revenue", "Employee Average Salary", "Requested Funds", "Business Location", "Status"
            }
        ));
        jScrollPane2.setViewportView(tblBorrower);

        panelViewBorrowers.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 21, 1446, 299));

        lblBorrowerID.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerID.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerID.setText("Borrower ID");
        panelViewBorrowers.add(lblBorrowerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 410, 173, 37));

        lblBorrowerName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerName.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerName.setText("Borrower Name");
        panelViewBorrowers.add(lblBorrowerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, 173, 37));

        lblBorrowerBussname.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerBussname.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerBussname.setText("Business name");
        panelViewBorrowers.add(lblBorrowerBussname, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 480, 173, 37));

        lblBorrowerBusinessDesc.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerBusinessDesc.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerBusinessDesc.setText("Business Description");
        panelViewBorrowers.add(lblBorrowerBusinessDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 550, 173, 37));

        lblBorrowerEmpCOunt.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerEmpCOunt.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerEmpCOunt.setText("Employee Count");
        panelViewBorrowers.add(lblBorrowerEmpCOunt, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 610, 173, 37));

        lblBorrowerRevenue.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerRevenue.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerRevenue.setText("Revenue");
        panelViewBorrowers.add(lblBorrowerRevenue, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 660, 173, 37));

        lblBorrowerReqFunds.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerReqFunds.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerReqFunds.setText("Requested Funds");
        panelViewBorrowers.add(lblBorrowerReqFunds, new org.netbeans.lib.awtextra.AbsoluteConstraints(583, 376, 173, 37));

        lblBorrowerEmpSalary.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerEmpSalary.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerEmpSalary.setText("Employee Average Salary");
        panelViewBorrowers.add(lblBorrowerEmpSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 730, 173, 37));

        lblBorrowerBussLoc.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerBussLoc.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerBussLoc.setText("Business Location");
        panelViewBorrowers.add(lblBorrowerBussLoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(583, 431, 173, 37));

        txtBorrowerName.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrowerName.setForeground(new java.awt.Color(255, 255, 255));
        panelViewBorrowers.add(txtBorrowerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 340, 174, 37));

        txtBorrowerID.setEditable(false);
        txtBorrowerID.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerID.setForeground(new java.awt.Color(255, 255, 255));
        panelViewBorrowers.add(txtBorrowerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 410, 174, 37));

        txtBorrowerBussName.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerBussName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrowerBussName.setForeground(new java.awt.Color(255, 255, 255));
        panelViewBorrowers.add(txtBorrowerBussName, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 480, 174, 37));

        txtBorrowerBussDescription.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerBussDescription.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrowerBussDescription.setForeground(new java.awt.Color(255, 255, 255));
        panelViewBorrowers.add(txtBorrowerBussDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 550, 174, 37));

        txtBorrowerEmpCount.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerEmpCount.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrowerEmpCount.setForeground(new java.awt.Color(255, 255, 255));
        panelViewBorrowers.add(txtBorrowerEmpCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 610, 174, 37));

        txtBorrowerRevenue.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerRevenue.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrowerRevenue.setForeground(new java.awt.Color(255, 255, 255));
        panelViewBorrowers.add(txtBorrowerRevenue, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 670, 174, 37));

        txtBorrowerEmpSalary.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerEmpSalary.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrowerEmpSalary.setForeground(new java.awt.Color(255, 255, 255));
        panelViewBorrowers.add(txtBorrowerEmpSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 730, 174, 37));

        txtBorrowerReqFunds.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerReqFunds.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrowerReqFunds.setForeground(new java.awt.Color(255, 255, 255));
        panelViewBorrowers.add(txtBorrowerReqFunds, new org.netbeans.lib.awtextra.AbsoluteConstraints(774, 376, 174, 37));

        txtBorrowerBussLoc.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerBussLoc.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrowerBussLoc.setForeground(new java.awt.Color(255, 255, 255));
        panelViewBorrowers.add(txtBorrowerBussLoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(774, 431, 174, 37));

        btnBorrowerView.setBackground(new java.awt.Color(0, 171, 214));
        btnBorrowerView.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnBorrowerView.setForeground(new java.awt.Color(255, 255, 255));
        btnBorrowerView.setText("View");
        btnBorrowerView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrowerViewActionPerformed(evt);
            }
        });
        panelViewBorrowers.add(btnBorrowerView, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 560, 139, 28));

        btnBorrowerUpdate.setBackground(new java.awt.Color(0, 171, 214));
        btnBorrowerUpdate.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnBorrowerUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnBorrowerUpdate.setText("Update");
        btnBorrowerUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrowerUpdateActionPerformed(evt);
            }
        });
        panelViewBorrowers.add(btnBorrowerUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 600, 139, 33));

        btnBorrowerDelete.setBackground(new java.awt.Color(0, 171, 214));
        btnBorrowerDelete.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnBorrowerDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnBorrowerDelete.setText("Delete");
        btnBorrowerDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrowerDeleteActionPerformed(evt);
            }
        });
        panelViewBorrowers.add(btnBorrowerDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 650, 139, 32));

        txtBorrowerStatus.setEditable(false);
        txtBorrowerStatus.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrowerStatus.setForeground(new java.awt.Color(255, 255, 255));
        panelViewBorrowers.add(txtBorrowerStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 490, 174, 37));

        lblBorrowerStatus.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrowerStatus.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrowerStatus.setText("Borrower Status");
        panelViewBorrowers.add(lblBorrowerStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 490, 173, 37));

        jLabel3.setText("jLabel3");
        panelViewBorrowers.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, 730, 410));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/istockphoto-1281736074-612x612 (2).jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        panelViewBorrowers.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, 0, 1560, -1));

        jTabbedPane1.addTab("View Borrowers", panelViewBorrowers);

        panViewBusiness.setMaximumSize(new java.awt.Dimension(1000, 1000));
        panViewBusiness.setMinimumSize(new java.awt.Dimension(1000, 1000));
        panViewBusiness.setPreferredSize(new java.awt.Dimension(1000, 1000));
        panViewBusiness.setRequestFocusEnabled(false);
        panViewBusiness.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                panViewBusinessFocusGained(evt);
            }
        });
        panViewBusiness.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panViewBusinessMouseClicked(evt);
            }
        });
        panViewBusiness.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabBusinessView.setBackground(new java.awt.Color(0, 171, 214));
        tabBusinessView.setForeground(new java.awt.Color(255, 255, 255));
        tabBusinessView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "BusinessID", "Name", "Description", "Type", "Lender ID"
            }
        ));
        tabBusinessView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabBusinessViewMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabBusinessView);

        panViewBusiness.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 1440, 298));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 171, 214));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/document.png"))); // NOI18N
        jLabel2.setText("Business Description:");
        panViewBusiness.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 450, -1, -1));

        txtBusDesUpd.setBackground(new java.awt.Color(0, 171, 214));
        txtBusDesUpd.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtBusDesUpd.setForeground(new java.awt.Color(255, 255, 255));
        panViewBusiness.add(txtBusDesUpd, new org.netbeans.lib.awtextra.AbsoluteConstraints(551, 465, 250, 40));

        txtBusNameUpd.setBackground(new java.awt.Color(0, 171, 214));
        txtBusNameUpd.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtBusNameUpd.setForeground(new java.awt.Color(255, 255, 255));
        panViewBusiness.add(txtBusNameUpd, new org.netbeans.lib.awtextra.AbsoluteConstraints(551, 364, 250, 40));

        lblBusName1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblBusName1.setForeground(new java.awt.Color(0, 171, 214));
        lblBusName1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBusName1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/business.png"))); // NOI18N
        lblBusName1.setText("Business Name:");
        panViewBusiness.add(lblBusName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 363, 257, -1));

        lblBusType1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblBusType1.setForeground(new java.awt.Color(0, 171, 214));
        lblBusType1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBusType1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/type.png"))); // NOI18N
        lblBusType1.setText("Business Type:");
        panViewBusiness.add(lblBusType1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 540, 257, -1));

        jrbEssBusUpd.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jrbEssBusUpd.setText("Essential ");
        jrbEssBusUpd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbEssBusUpdActionPerformed(evt);
            }
        });
        panViewBusiness.add(jrbEssBusUpd, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 560, 97, -1));

        jrbNonEssBusUpd.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jrbNonEssBusUpd.setText("Non-Essential");
        jrbNonEssBusUpd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbNonEssBusUpdActionPerformed(evt);
            }
        });
        panViewBusiness.add(jrbNonEssBusUpd, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 560, -1, -1));

        txtBusLenderId.setEditable(false);
        txtBusLenderId.setBackground(new java.awt.Color(0, 171, 214));
        txtBusLenderId.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtBusLenderId.setForeground(new java.awt.Color(255, 255, 255));
        panViewBusiness.add(txtBusLenderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 640, 250, 40));

        lblBusLoc1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblBusLoc1.setForeground(new java.awt.Color(0, 171, 214));
        lblBusLoc1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBusLoc1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/id-card.png"))); // NOI18N
        lblBusLoc1.setText("Lender ID");
        panViewBusiness.add(lblBusLoc1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 630, 257, -1));

        btnUpdateBusines.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnUpdateBusines.setForeground(new java.awt.Color(0, 171, 214));
        btnUpdateBusines.setText("Update Business");
        btnUpdateBusines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBusinesActionPerformed(evt);
            }
        });
        panViewBusiness.add(btnUpdateBusines, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 720, 292, 37));

        txtbusinessIdInvisible.setText("jTextField1");
        panViewBusiness.add(txtbusinessIdInvisible, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 700, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/istockphoto-1281736074-612x612 (2).jpg"))); // NOI18N
        jLabel6.setText("jLabel6");
        panViewBusiness.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1500, 980));

        jTabbedPane1.addTab("View Business", panViewBusiness);

        panelViewFunds.setForeground(new java.awt.Color(0, 171, 214));
        panelViewFunds.setMaximumSize(new java.awt.Dimension(1000, 1000));
        panelViewFunds.setMinimumSize(new java.awt.Dimension(1000, 1000));
        panelViewFunds.setPreferredSize(new java.awt.Dimension(1000, 1000));
        panelViewFunds.setRequestFocusEnabled(false);

        lblTotalFunds.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblTotalFunds.setForeground(new java.awt.Color(0, 171, 214));
        lblTotalFunds.setText("Total Funds in Treasury");

        lblEssentailFunds.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblEssentailFunds.setForeground(new java.awt.Color(0, 171, 214));
        lblEssentailFunds.setText("Total Essential Funds");

        lblNonEssentialFunds.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblNonEssentialFunds.setForeground(new java.awt.Color(0, 171, 214));
        lblNonEssentialFunds.setText("Total Non- Essentail Funds");

        txtTotalFunds.setBackground(new java.awt.Color(0, 171, 214));
        txtTotalFunds.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtTotalFunds.setForeground(new java.awt.Color(255, 255, 255));

        txtEssentialFunds.setBackground(new java.awt.Color(0, 171, 214));
        txtEssentialFunds.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtEssentialFunds.setForeground(new java.awt.Color(255, 255, 255));

        txtNonEssentailFunds.setBackground(new java.awt.Color(0, 171, 214));
        txtNonEssentailFunds.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtNonEssentailFunds.setForeground(new java.awt.Color(255, 255, 255));

        btnFundsUpdate.setBackground(new java.awt.Color(0, 171, 214));
        btnFundsUpdate.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnFundsUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnFundsUpdate.setText("Update");
        btnFundsUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFundsUpdateActionPerformed(evt);
            }
        });

        sliSplitFunds.setBackground(new java.awt.Color(102, 0, 204));
        sliSplitFunds.setPaintLabels(true);
        sliSplitFunds.setPaintTicks(true);
        sliSplitFunds.setSnapToTicks(true);
        sliSplitFunds.setValue(70);
        sliSplitFunds.setPreferredSize(new java.awt.Dimension(250, 40));
        sliSplitFunds.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliSplitFundsStateChanged(evt);
            }
        });

        lblTotalFunds1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblTotalFunds1.setForeground(new java.awt.Color(0, 171, 214));
        lblTotalFunds1.setText("Split % between Funds");

        javax.swing.GroupLayout panelViewFundsLayout = new javax.swing.GroupLayout(panelViewFunds);
        panelViewFunds.setLayout(panelViewFundsLayout);
        panelViewFundsLayout.setHorizontalGroup(
            panelViewFundsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewFundsLayout.createSequentialGroup()
                .addGroup(panelViewFundsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelViewFundsLayout.createSequentialGroup()
                        .addGap(472, 472, 472)
                        .addComponent(btnFundsUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelViewFundsLayout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addGroup(panelViewFundsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelViewFundsLayout.createSequentialGroup()
                                .addComponent(lblNonEssentialFunds, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74)
                                .addComponent(txtNonEssentailFunds, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelViewFundsLayout.createSequentialGroup()
                                .addGroup(panelViewFundsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEssentailFunds, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTotalFunds1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTotalFunds, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(panelViewFundsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sliSplitFunds, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEssentialFunds, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTotalFunds, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(616, Short.MAX_VALUE))
        );
        panelViewFundsLayout.setVerticalGroup(
            panelViewFundsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewFundsLayout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(panelViewFundsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalFunds, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalFunds, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(panelViewFundsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalFunds1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sliSplitFunds, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(panelViewFundsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEssentialFunds, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEssentailFunds, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(panelViewFundsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNonEssentailFunds, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNonEssentialFunds, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(86, 86, 86)
                .addComponent(btnFundsUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(457, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("View Funds", panelViewFunds);

        panelViewProposals.setMaximumSize(new java.awt.Dimension(1000, 1000));
        panelViewProposals.setMinimumSize(new java.awt.Dimension(1000, 1000));
        panelViewProposals.setPreferredSize(new java.awt.Dimension(1000, 1000));
        panelViewProposals.setRequestFocusEnabled(false);
        panelViewProposals.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblProposals.setBackground(new java.awt.Color(0, 171, 214));
        tblProposals.setForeground(new java.awt.Color(255, 255, 255));
        tblProposals.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Proposal ID", "Funder ID", "Borrower", "Requested Fund Amount", "Proposal Status", "Comments"
            }
        ));
        jScrollPane4.setViewportView(tblProposals);

        panelViewProposals.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 18, 1478, 339));

        lblFunderID.setBackground(new java.awt.Color(255, 255, 255));
        lblFunderID.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblFunderID.setForeground(new java.awt.Color(0, 171, 214));
        lblFunderID.setText("Funder ID");
        panelViewProposals.add(lblFunderID, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 390, 181, 40));

        lblBorrower.setBackground(new java.awt.Color(255, 255, 255));
        lblBorrower.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBorrower.setForeground(new java.awt.Color(0, 171, 214));
        lblBorrower.setText("Borrower");
        panelViewProposals.add(lblBorrower, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 461, 181, 40));

        lblProposalStatus.setBackground(new java.awt.Color(255, 255, 255));
        lblProposalStatus.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblProposalStatus.setForeground(new java.awt.Color(0, 171, 214));
        lblProposalStatus.setText("Proposal Status");
        panelViewProposals.add(lblProposalStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 533, 181, 40));

        lblComments.setBackground(new java.awt.Color(255, 255, 255));
        lblComments.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblComments.setForeground(new java.awt.Color(0, 171, 214));
        lblComments.setText("Comments");
        panelViewProposals.add(lblComments, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 645, 181, 40));

        txtFunderID.setBackground(new java.awt.Color(0, 171, 214));
        txtFunderID.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtFunderID.setForeground(new java.awt.Color(255, 255, 255));
        panelViewProposals.add(txtFunderID, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 387, 351, 46));

        txtBorrower.setEditable(false);
        txtBorrower.setBackground(new java.awt.Color(0, 171, 214));
        txtBorrower.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtBorrower.setForeground(new java.awt.Color(255, 255, 255));
        panelViewProposals.add(txtBorrower, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 461, 351, 40));

        txtProposalStatus.setEditable(false);
        txtProposalStatus.setBackground(new java.awt.Color(0, 171, 214));
        txtProposalStatus.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtProposalStatus.setForeground(new java.awt.Color(255, 255, 255));
        panelViewProposals.add(txtProposalStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 533, 351, 40));

        txtComments.setBackground(new java.awt.Color(0, 171, 214));
        txtComments.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtComments.setForeground(new java.awt.Color(255, 255, 255));
        panelViewProposals.add(txtComments, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 645, 351, 99));

        btnViewProposals.setBackground(new java.awt.Color(0, 171, 214));
        btnViewProposals.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnViewProposals.setForeground(new java.awt.Color(255, 255, 255));
        btnViewProposals.setText("View");
        btnViewProposals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewProposalsActionPerformed(evt);
            }
        });
        panelViewProposals.add(btnViewProposals, new org.netbeans.lib.awtextra.AbsoluteConstraints(967, 429, 153, 36));

        btnUpdateProposals.setBackground(new java.awt.Color(0, 171, 214));
        btnUpdateProposals.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnUpdateProposals.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateProposals.setText("Update");
        btnUpdateProposals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProposalsActionPerformed(evt);
            }
        });
        panelViewProposals.add(btnUpdateProposals, new org.netbeans.lib.awtextra.AbsoluteConstraints(967, 501, 153, 31));

        btnDeleteProposals.setBackground(new java.awt.Color(0, 171, 214));
        btnDeleteProposals.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnDeleteProposals.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteProposals.setText("Delete");
        btnDeleteProposals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProposalsActionPerformed(evt);
            }
        });
        panelViewProposals.add(btnDeleteProposals, new org.netbeans.lib.awtextra.AbsoluteConstraints(967, 576, 153, 35));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/istockphoto-1281736074-612x612 (2).jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        panelViewProposals.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1500, 970));

        jTabbedPane1.addTab("View proposals", panelViewProposals);

        panelViewReport.setMaximumSize(new java.awt.Dimension(1000, 1000));
        panelViewReport.setMinimumSize(new java.awt.Dimension(1000, 1000));
        panelViewReport.setPreferredSize(new java.awt.Dimension(1000, 1000));
        panelViewReport.setRequestFocusEnabled(false);

        javax.swing.GroupLayout panelViewReportLayout = new javax.swing.GroupLayout(panelViewReport);
        panelViewReport.setLayout(panelViewReportLayout);
        panelViewReportLayout.setHorizontalGroup(
            panelViewReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelViewReportLayout.setVerticalGroup(
            panelViewReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Report", panelViewReport);

        jPanel1.setBackground(new java.awt.Color(0, 171, 214));

        btnLogOut.setBackground(new java.awt.Color(0, 171, 214));
        btnLogOut.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnLogOut.setForeground(new java.awt.Color(255, 255, 255));
        btnLogOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logout (3).png"))); // NOI18N
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(1392, Short.MAX_VALUE)
                .addComponent(btnLogOut)
                .addGap(65, 65, 65))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnLogOut))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1500, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        LoginPage lp = new LoginPage();
        lp.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void panViewBusinessMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panViewBusinessMouseClicked
        // TODO add your handling code here:
        //popBusinessTab();
    }//GEN-LAST:event_panViewBusinessMouseClicked

    private void panViewBusinessFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_panViewBusinessFocusGained
        // TODO add your handling code here:
        //   popBusinessTab();
    }//GEN-LAST:event_panViewBusinessFocusGained

    private void btnUpdateBusinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBusinesActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tabBusinessView.getSelectionModel().getLeadSelectionIndex();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(rootPane, "Please select a row to Update");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tabBusinessView.getModel();

        Vector<Vector> dataVector;
        dataVector = model.getDataVector();

        int busIdFromTable = Integer.parseInt(txtbusinessIdInvisible.getText());
        String busName = txtBusNameUpd.getText();
        String busDesc = txtBusDesUpd.getText();

        try {

            for (Network nw : system.getNetworkList()) {
                if ("Boston".equals(nw.getNetworkName())) {
                    for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                        if (ent.getEnterpriseType() == Enterprise.EnterpriseType.BUSINESSENTERPRISE) {
                            BusinessEnterprise busEnt = (BusinessEnterprise) ent;

                            for (Business updateBus : busEnt.getBusinessDir()) {
                                if (updateBus.getBusinessId() == busIdFromTable) {
                                    updateBus.setBusinessDescription(busDesc);
                                    updateBus.setBusinessName(busName);
                                    if (jrbEssBusUpd.isSelected()) {

                                        updateBus.setBusinessType("Essential");
                                    }
                                    if (jrbNonEssBusUpd.isSelected()) {
                                        updateBus.setBusinessType("NonEssential");
                                    }
                                }
                            }

                            popBusinessTab();
                            return;
                        }
                    }
                }
            }
        } catch (java.lang.NullPointerException ne) {
        }
    }//GEN-LAST:event_btnUpdateBusinesActionPerformed

    private void jrbNonEssBusUpdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbNonEssBusUpdActionPerformed
        // TODO add your handling code here:
        jrbEssBusUpd.setSelected(false);
    }//GEN-LAST:event_jrbNonEssBusUpdActionPerformed

    private void jrbEssBusUpdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbEssBusUpdActionPerformed
        // TODO add your handling code here:
        jrbNonEssBusUpd.setSelected(false);
    }//GEN-LAST:event_jrbEssBusUpdActionPerformed

    private void tabBusinessViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabBusinessViewMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = tabBusinessView.getSelectionModel().getLeadSelectionIndex();

        if (selectedRowIndex < 0) {

            return;
        }

        DefaultTableModel model = (DefaultTableModel) tabBusinessView.getModel();

        Vector<Vector> dataVector;
        dataVector = model.getDataVector();

        int busId = (int) dataVector.get(selectedRowIndex).get(0);
        String busName = (String) dataVector.get(selectedRowIndex).get(1);
        String busDesc = (String) dataVector.get(selectedRowIndex).get(2);
        String busType = (String) dataVector.get(selectedRowIndex).get(3);
        String busLenderID = (String) dataVector.get(selectedRowIndex).get(4);

        txtbusinessIdInvisible.setText(String.valueOf(busId));
        txtBusNameUpd.setText(String.valueOf(busName));
        txtBusDesUpd.setText(busDesc);
        txtBusLenderId.setText(busLenderID);

        if ("Essential".equalsIgnoreCase(busType)) {
            jrbEssBusUpd.setSelected(true);
            jrbNonEssBusUpd.setSelected(false);

        } else if ("NonEssential".equalsIgnoreCase(busType)) {
            jrbEssBusUpd.setSelected(false);
            jrbNonEssBusUpd.setSelected(true);
        }
    }//GEN-LAST:event_tabBusinessViewMouseClicked

    private void btnDeleteProposalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProposalsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteProposalsActionPerformed

    private void btnUpdateProposalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProposalsActionPerformed
        // TODO add your handling code here:
        updateBorrowerProposals();
    }//GEN-LAST:event_btnUpdateProposalsActionPerformed

    private void btnViewProposalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewProposalsActionPerformed
        // TODO add your handling code here:
        viewBorrowerProposals();
    }//GEN-LAST:event_btnViewProposalsActionPerformed

    private void sliSplitFundsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliSplitFundsStateChanged
        // TODO add your handling code here:
        int percentage = sliSplitFunds.getValue();
        //        txtEssPercent.setText("" + percentage);
        //        txtNonEssPercent.setText("" + (100 - percentage));
    }//GEN-LAST:event_sliSplitFundsStateChanged

    private void btnFundsUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFundsUpdateActionPerformed
        // TODO add your handling code here:
        updateFunds();
    }//GEN-LAST:event_btnFundsUpdateActionPerformed

    private void btnBorrowerDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrowerDeleteActionPerformed
        // TODO add your handling code here:
        deleteBorrowerDetails();
    }//GEN-LAST:event_btnBorrowerDeleteActionPerformed

    private void btnBorrowerUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrowerUpdateActionPerformed
        // TODO add your handling code here:
        updateBorrowerDetails();
    }//GEN-LAST:event_btnBorrowerUpdateActionPerformed

    private void btnBorrowerViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrowerViewActionPerformed
        // TODO add your handling code here:
        viewBorrowerDetails();
    }//GEN-LAST:event_btnBorrowerViewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        deleteLenderDetails();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        updateLenderDetails();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:

        viewLenderDetails();
    }//GEN-LAST:event_btnViewActionPerformed

    private void txtLenderNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLenderNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLenderNameActionPerformed

    private void txtLenderBusinessNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLenderBusinessNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLenderBusinessNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SystemAdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SystemAdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SystemAdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SystemAdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SystemAdminPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrowerDelete;
    private javax.swing.JButton btnBorrowerUpdate;
    private javax.swing.JButton btnBorrowerView;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteProposals;
    private javax.swing.JButton btnFundsUpdate;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateBusines;
    private javax.swing.JButton btnUpdateProposals;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnViewProposals;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton jrbEssBusUpd;
    private javax.swing.JRadioButton jrbNonEssBusUpd;
    private javax.swing.JLabel lblBorrower;
    private javax.swing.JLabel lblBorrowerBusinessDesc;
    private javax.swing.JLabel lblBorrowerBussLoc;
    private javax.swing.JLabel lblBorrowerBussname;
    private javax.swing.JLabel lblBorrowerEmpCOunt;
    private javax.swing.JLabel lblBorrowerEmpSalary;
    private javax.swing.JLabel lblBorrowerID;
    private javax.swing.JLabel lblBorrowerName;
    private javax.swing.JLabel lblBorrowerReqFunds;
    private javax.swing.JLabel lblBorrowerRevenue;
    private javax.swing.JLabel lblBorrowerStatus;
    private javax.swing.JLabel lblBusLoc1;
    private javax.swing.JLabel lblBusName1;
    private javax.swing.JLabel lblBusType1;
    private javax.swing.JLabel lblComments;
    private javax.swing.JLabel lblEssentailFunds;
    private javax.swing.JLabel lblFundedAmt;
    private javax.swing.JLabel lblFunderID;
    private javax.swing.JLabel lblLenderBusiness;
    private javax.swing.JLabel lblLenderID;
    private javax.swing.JLabel lblLenderIncomeTax;
    private javax.swing.JLabel lblLenderInterestDate;
    private javax.swing.JLabel lblLenderName;
    private javax.swing.JLabel lblLenderRevenue;
    private javax.swing.JLabel lblLenderStatus;
    private javax.swing.JLabel lblLenderSupportedBusinessID;
    private javax.swing.JLabel lblNonEssentialFunds;
    private javax.swing.JLabel lblProposalStatus;
    private javax.swing.JLabel lblROI;
    private javax.swing.JLabel lblTotalFunds;
    private javax.swing.JLabel lblTotalFunds1;
    private javax.swing.JPanel panViewBusiness;
    private javax.swing.JPanel panelViewBorrowers;
    private javax.swing.JPanel panelViewFunds;
    private javax.swing.JPanel panelViewLenders;
    private javax.swing.JPanel panelViewProposals;
    private javax.swing.JPanel panelViewReport;
    private javax.swing.JSlider sliSplitFunds;
    private javax.swing.JTable tabBusinessView;
    private javax.swing.JTable tblBorrower;
    private javax.swing.JTable tblLender;
    private javax.swing.JTable tblProposals;
    private javax.swing.JTextField txtBorrower;
    private javax.swing.JTextField txtBorrowerBussDescription;
    private javax.swing.JTextField txtBorrowerBussLoc;
    private javax.swing.JTextField txtBorrowerBussName;
    private javax.swing.JTextField txtBorrowerEmpCount;
    private javax.swing.JTextField txtBorrowerEmpSalary;
    private javax.swing.JTextField txtBorrowerID;
    private javax.swing.JTextField txtBorrowerName;
    private javax.swing.JTextField txtBorrowerReqFunds;
    private javax.swing.JTextField txtBorrowerRevenue;
    private javax.swing.JTextField txtBorrowerStatus;
    private javax.swing.JTextField txtBusDesUpd;
    private javax.swing.JTextField txtBusLenderId;
    private javax.swing.JTextField txtBusNameUpd;
    private javax.swing.JTextField txtComments;
    private javax.swing.JTextField txtEssentialFunds;
    private javax.swing.JTextField txtFunderID;
    private javax.swing.JTextField txtLenderBusinessName;
    private javax.swing.JTextField txtLenderFundingAmt;
    private javax.swing.JTextField txtLenderID;
    private javax.swing.JTextField txtLenderIncomeTax;
    private javax.swing.JTextField txtLenderInterestRate;
    private javax.swing.JTextField txtLenderInterestStartTime;
    private javax.swing.JTextField txtLenderName;
    private javax.swing.JTextField txtLenderStatus;
    private javax.swing.JTextField txtLenderSupportedBusinessID;
    private javax.swing.JTextField txtLenderTotalRevenue;
    private javax.swing.JTextField txtNonEssentailFunds;
    private javax.swing.JTextField txtProposalStatus;
    private javax.swing.JTextField txtTotalFunds;
    private javax.swing.JTextField txtbusinessIdInvisible;
    // End of variables declaration//GEN-END:variables

    private void popBusinessTab() {
        DefaultTableModel model = (DefaultTableModel) tabBusinessView.getModel();
        model.setRowCount(0);

        for (Network nw : system.getNetworkList()) {
            if ("Boston".equals(nw.getNetworkName())) {
                for (Enterprise en : nw.getEntDirObj().getEnterpriseList()) {
                    if (en.getEnterpriseType() == Enterprise.EnterpriseType.BUSINESSENTERPRISE) {
                        BusinessEnterprise busEnt = (BusinessEnterprise) en;
                        ArrayList<Business> businessList = busEnt.getBusinessDir();
                        for (Business bus : businessList) {
                            Object[] row = new Object[5];
                            row[0] = bus.getBusinessId();
                            row[1] = bus.getBusinessName();
                            row[2] = bus.getBusinessDescription();
                            row[3] = bus.getBusinessType();
                            row[4] = bus.getLenderID();
                            if (bus.getOrgType() == Organization.Type.PUBLICBUSINESSPORTFOLIOORG) {
                                model.addRow(row);
                            }
                        }
                    }
                }
            }
        }

    }

    public void popLenderTable() {

        DefaultTableModel model = (DefaultTableModel) tblLender.getModel();
        model.setRowCount(0);
        for (Network nw : system.getNetworkList()) {
            if ("Boston".equals(nw.getNetworkName())) {
                for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                        UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;
                        Object[] row = null;
                        for (Lender len : userEnt.getLenderDirectory()) {
                            //if (!len.getActiveStatus().equalsIgnoreCase("deleted")) {
                            try {

                                row = new Object[10];
                                row[0] = len;
                                row[1] = len.getName();
                                row[9] = len.getActiveStatus();
                                row[4] = len.getFundingAmount();
                                row[3] = len.getSupportedBusinessId();
                                row[5] = len.getRevenue();
                                row[6] = len.getTaxAmountPaid();
                                row[7] = len.getInterestRate();
                                row[8] = len.getInterestStartYears();

                                String businessName = len.getLenderBusiness().getBusinessName();
                                row[2] = businessName;

                            } catch (NullPointerException e) {
                            }
                            //} 
                            model.addRow(row);
                        }
                        return;
                    }
                }
            }
        }
    }

    public void viewLenderDetails() {
        int selectedRowIndex = tblLender.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Lender to View Details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblLender.getModel();
        Lender len = (Lender) model.getValueAt(selectedRowIndex, 0);

        float fundingAmt = len.getFundingAmount();
        float revenue = len.getRevenue();
        float taxAmountPaid = len.getTaxAmountPaid();
        float interestRate = len.getInterestRate();
        String businessName = "";
        try {

            businessName = len.getLenderBusiness().getBusinessName();
        } catch (Exception e) {
            businessName = "";
        }

        txtLenderID.setText(len.getLenderID());
        txtLenderName.setText(len.getName());
        txtLenderBusinessName.setText(businessName);
        txtLenderSupportedBusinessID.setText(String.valueOf(len.getSupportedBusinessId()));
        txtLenderFundingAmt.setText(String.valueOf(fundingAmt));
        txtLenderTotalRevenue.setText(String.valueOf(revenue));
        txtLenderIncomeTax.setText(String.valueOf(taxAmountPaid));
        txtLenderInterestRate.setText(String.valueOf(interestRate));
        txtLenderInterestStartTime.setText(String.valueOf(len.getInterestStartYears()));
        txtLenderStatus.setText(String.valueOf(len.getActiveStatus()));

    }

    public void updateLenderDetails() {
        int selectedRowIndex = tblLender.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Lender to Update Details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblLender.getModel();
        Lender len = (Lender) model.getValueAt(selectedRowIndex, 0);
        if (len.getActiveStatus() == "Initial") {
            JOptionPane.showMessageDialog(rootPane, "Cannot update Lender when Status is intial");
            return;
        }
//        ------------------
        if (txtLenderTotalRevenue.getText().equals("") || txtLenderTotalRevenue.getText().equalsIgnoreCase("0.0")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Revenue");
            return;
        } else if (txtLenderIncomeTax.getText().equals("") || txtLenderIncomeTax.getText().equalsIgnoreCase("0.0")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the IncomeTax");
            return;
        } else if (txtLenderFundingAmt.getText().equals("") || txtLenderFundingAmt.getText().equalsIgnoreCase("0.0")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Funding Amount");
            return;
        } else if (txtLenderInterestStartTime.getText().equals("") || txtLenderInterestStartTime.getText().equalsIgnoreCase("0.0")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Interest Date");
            return;
        } else if (txtLenderInterestRate.getText().equals("") || txtLenderInterestRate.getText().equalsIgnoreCase("0.0")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Interest Rate");
            return;
        } else {
            if (!txtLenderTotalRevenue.getText().matches("[0-9]+") || Double.parseDouble(txtLenderTotalRevenue.getText()) < 1) {
                JOptionPane.showMessageDialog(this, "Please input correct revenue details");
                return;
            }
            if (Float.parseFloat(txtLenderTotalRevenue.getText()) < 1 || !txtLenderTotalRevenue.getText().matches("[0-9]+")) {
                JOptionPane.showMessageDialog(this, "Please input correct revenue details");
                return;
            }
            if (!txtLenderIncomeTax.getText().matches("[0-9]+")) {//|| Integer.parseInt(txtIncomeTax.getText())<1
                JOptionPane.showMessageDialog(this, "Please input correct IncomeTax details");

            }
            if (!txtLenderFundingAmt.getText().matches("[0-9]+") || Double.parseDouble(txtLenderFundingAmt.getText()) < 10000) {
                JOptionPane.showMessageDialog(this, "Minimum funding requirement is $10000");
                return;
            }
            if (!txtLenderInterestStartTime.getText().matches("[0-9]+")) {//|| Integer.parseInt(txtInterestStartTime.getText())<2
                JOptionPane.showMessageDialog(this, "Please input correct input on Interest Start time");
                return;
            }
            if (!txtLenderInterestRate.getText().matches("[0-9]+")) {//|| Integer.parseInt(txtInterestRate.getText())>=10
                JOptionPane.showMessageDialog(this, "Please input correct interest Rate");
                return;
            }
// ------------

//        txtLenderID.setText(len.getLenderID());
            len.setName(txtLenderName.getText());
            len.setSupportedBusinessId(Integer.parseInt(txtLenderSupportedBusinessID.getText()));
            len.setFundingAmount(Float.parseFloat(txtLenderFundingAmt.getText()));
            len.setRevenue(Float.parseFloat(txtLenderTotalRevenue.getText()));
            len.setTaxAmountPaid(Float.parseFloat(txtLenderIncomeTax.getText()));
            len.setInterestRate(Float.parseFloat(txtLenderInterestRate.getText()));
            len.setInterestStartYears(Integer.parseInt(txtLenderInterestStartTime.getText()));
            len.setActiveStatus(txtLenderStatus.getText());
            JOptionPane.showMessageDialog(this, "Updated");
            popLenderTable();
        }
    }

    public void deleteLenderDetails() {
        int selectedRowIndex = tblLender.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Lender to Delete details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblLender.getModel();
        Lender len = (Lender) model.getValueAt(selectedRowIndex, 0);
        for (Network nw : system.getNetworkList()) {
            System.out.println("innew");
            if ("Boston".equals(nw.getNetworkName())) {
                for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                    System.out.println("inent");
                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                        UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;
                        for (Lender lender : userEnt.getLenderDirectory()) {
                            if (len.getLenderID().equals(lender.getLenderID())) {
                                if (lender.getActiveStatus().equalsIgnoreCase("Initial")) {
                                    lender.setActiveStatus("Deleted");
//                                userEnt.getLenderDirectory().remove(lender);
                                    popLenderTable();
                                    JOptionPane.showMessageDialog(this, "Lender Status changed in the System");
                                    return;
                                } else {
                                    JOptionPane.showMessageDialog(this, "This user details are important for the government.Delete operation Denied");
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    private void popBorrowerTable() {
        DefaultTableModel model = (DefaultTableModel) tblBorrower.getModel();
        model.setRowCount(0);
        Object[] row = new Object[10];
        for (Network nw : system.getNetworkList()) {
            System.out.println("innew");
            if ("Boston".equals(nw.getNetworkName())) {
                for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                    System.out.println("inent");
                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                        UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;
                        for (Borrower br : userEnt.getBorrowerDirectory()) {
                            if (!br.getActiveStatus().equalsIgnoreCase("deleted")) {
                                System.out.println("inlen");
                                row[0] = br.getBorrowerId();
                                row[1] = br.getName();
                                row[2] = br.getBusinessName();
                                row[3] = br.getBusinessDescription();
                                row[4] = br.getEmployeeCount();
                                row[5] = br.getRevenue();
                                row[6] = br.getEmployeeAverageSalary();
                                row[7] = br.getRequestedFund();
                                row[8] = br.getBusinessLocation();
                                row[9] = br.getActiveStatus();
                                model.addRow(row);
                            }
                        }
                        return;
                    }
                }
            }
        }
    }

    public void viewBorrowerDetails() {
        int selectedRowIndex = tblBorrower.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Borrower to View Details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblBorrower.getModel();

        Vector<Vector> dataVector;
        dataVector = model.getDataVector();

        int empCount = (int) dataVector.get(selectedRowIndex).get(4);
        double revenue = (double) dataVector.get(selectedRowIndex).get(5);
        double empSal = (double) dataVector.get(selectedRowIndex).get(6);
        double reqFunds = (double) dataVector.get(selectedRowIndex).get(7);

        txtBorrowerID.setText((String) dataVector.get(selectedRowIndex).get(0));
        txtBorrowerName.setText((String) dataVector.get(selectedRowIndex).get(1));
        txtBorrowerBussName.setText((String) dataVector.get(selectedRowIndex).get(2));
        txtBorrowerBussDescription.setText((String) dataVector.get(selectedRowIndex).get(3));
        txtBorrowerEmpCount.setText(String.valueOf(empCount));
        txtBorrowerRevenue.setText(String.valueOf(revenue));
        txtBorrowerEmpSalary.setText(String.valueOf(empSal));
        txtBorrowerReqFunds.setText(String.valueOf(reqFunds));
        txtBorrowerBussLoc.setText((String) dataVector.get(selectedRowIndex).get(8));
        txtBorrowerStatus.setText((String) dataVector.get(selectedRowIndex).get(9));

    }

    public void updateBorrowerDetails() {
        int selectedRowIndex = tblBorrower.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Borrower to Update Details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblBorrower.getModel();
        Vector<Vector> dataVector;
        dataVector = model.getDataVector();

        String borrowerID = (String) dataVector.get(selectedRowIndex).get(0);

        for (Network nw : system.getNetworkList()) {
            if ("Boston".equalsIgnoreCase(nw.getNetworkName())) {
                for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                        UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;
                        for (Borrower br : userEnt.getBorrowerDirectory()) {
                            if (br.getBorrowerId().equals(borrowerID)) {
                                br.setName(txtBorrowerName.getText());
                                br.setBusinessName(txtBorrowerBussName.getText());
                                br.setBusinessDescription(txtBorrowerBussDescription.getText());
                                br.setEmployeeCount(Integer.parseInt(txtBorrowerEmpCount.getText()));
                                br.setRevenue(Double.parseDouble(txtBorrowerRevenue.getText()));
                                br.setEmployeeAverageSalary(Double.parseDouble(txtBorrowerEmpSalary.getText()));
                                br.setRequestedFund(Double.parseDouble(txtBorrowerReqFunds.getText()));
                                br.setBusinessLocation(txtBorrowerBussLoc.getText());
                                br.setActiveStatus(txtBorrowerStatus.getText());
                                popBorrowerTable();
                                return;
                            }
                        }

                    }
                }
            }
        }

//        txtLenderID.setText(len.getLenderID());
//        txtBorrowerID.setText(br.getBorrowerId());
        JOptionPane.showMessageDialog(this, "Updated Borrower Details");
        popBorrowerTable();
    }

    public void deleteBorrowerDetails() {
        int selectedRowIndex = tblBorrower.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Borrower to Delete details");
            return;
        }
        
        
        DefaultTableModel model = (DefaultTableModel) tblBorrower.getModel();
        Vector<Vector> dataVector;
        dataVector = model.getDataVector();

        String borrowerID = (String) dataVector.get(selectedRowIndex).get(0);
        
        for (Network nw : system.getNetworkList()) {
            System.out.println("innew");
            if ("Boston".equals(nw.getNetworkName())) {
                for (Enterprise ent : nw.getEntDirObj().getEnterpriseList()) {
                    System.out.println("inent");
                    if (ent.getEnterpriseType() == Enterprise.EnterpriseType.USERANDVERIFICATIONENTERPRISE) {
                        UserAndVerificationEnterprise userEnt = (UserAndVerificationEnterprise) ent;
                        for (Borrower borrower : userEnt.getBorrowerDirectory()) {
                            if (borrower.getBorrowerId().equals(borrowerID)) {
                                if (borrower.getActiveStatus().equalsIgnoreCase("Initial")) {
//                                userEnt.getBorrowerDirectory().remove(br);
                                    borrower.setActiveStatus("Deleted");
                                    popBorrowerTable();
                                    JOptionPane.showMessageDialog(this, "Borrower Removed from the System");
                                    return;
                                } else {
                                    JOptionPane.showMessageDialog(this, "This user details are important for the government.Delete operation Denied");
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public void popFunds() {
        for (Network nw : system.getNetworkList()) {
            if ("Boston".equalsIgnoreCase(nw.getNetworkName())) {
                for (Enterprise en : nw.getEntDirObj().getEnterpriseList()) {
                    if (en.getEnterpriseType() == Enterprise.EnterpriseType.FUNDMANAGEMENTENTERPRISE) {
                        for (Organization org : en.getOrganizationDirectory().getOrganizationList()) {
                            if (org.getOrgType() == Organization.Type.TREASURYORG) {
                                TreasuryOrg treasury = (TreasuryOrg) org;

                                txtTotalFunds.setText(String.valueOf(treasury.getTotalfunds()));
                                txtEssentialFunds.setText(String.valueOf(treasury.getEssentialfunds()));
                                txtNonEssentailFunds.setText(String.valueOf(treasury.getNonessentialfunds()));

                                return;
                            }
                        }

                    }
                }
            }
        }
    }

    public void updateFunds() {
        for (Network nw : system.getNetworkList()) {
            if ("Boston".equalsIgnoreCase(nw.getNetworkName())) {
                for (Enterprise en : nw.getEntDirObj().getEnterpriseList()) {
                    if (en.getEnterpriseType() == Enterprise.EnterpriseType.FUNDMANAGEMENTENTERPRISE) {
                        for (Organization org : en.getOrganizationDirectory().getOrganizationList()) {
                            if (org.getOrgType() == Organization.Type.TREASURYORG) {
                                TreasuryOrg treasury = (TreasuryOrg) org;
                                float totalFunds = treasury.getTotalfunds();

                                totalFunds = treasury.addToTotalfunds(Float.parseFloat(txtTotalFunds.getText()), sliSplitFunds.getValue());
//                                txtAmountToBeAdded.setText("0");

                                txtTotalFunds.setText(String.valueOf(treasury.getTotalfunds()));
                                txtEssentialFunds.setText(String.valueOf(treasury.getEssentialfunds()));
                                txtNonEssentailFunds.setText(String.valueOf(treasury.getNonessentialfunds()));
                                JOptionPane.showMessageDialog(this, "Funds Updated Successfully");
                                popFunds();
                                return;
                            }
                        }

                    }
                }
            }
        }
    }

    private void popBorrowerProposals() {
        DefaultTableModel model = (DefaultTableModel) tblProposals.getModel();
        model.setRowCount(0);
        Object[] row = new Object[6];
        for (Network nw : system.getNetworkList()) {
            if ("Boston".equalsIgnoreCase(nw.getNetworkName())) {
                for (Proposal pr : nw.getProposalDirectory().getProposalDirectory()) {
//                    if (pr.getProposalStatus().equalsIgnoreCase("Initiated")) {
                    row[0] = pr;
                    row[1] = pr.getFunderId();
                    row[2] = pr.getBorrower().getBorrowerId();
                    row[3] = pr.getRequestedFundAmount();
                    row[4] = pr.getProposalStatus();
                    row[5] = pr.getComments();
                    model.addRow(row);
//                    }
                }
//                listBorrower.setModel(mlist);
                return;
            }
        }
    }

    public void viewBorrowerProposals() {
        int selectedRowIndex = tblProposals.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Proposal to View Details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblProposals.getModel();
        Proposal prop = (Proposal) model.getValueAt(selectedRowIndex, 0);
        for (Network n : system.getNetworkList()) {
            if (n.getNetworkName().equalsIgnoreCase("Boston")) {
                for (Proposal pr : n.getProposalDirectory().getProposalDirectory()) {
                    if (pr.getProposalId() == prop.getProposalId()) {
                        txtBorrower.setText(String.valueOf(pr.getBorrower().getBorrowerId()));
                        txtFunderID.setText(String.valueOf(pr.getFunderId()));
//                        txtReqAmount.setText(String.valueOf(pr.getBorrower().getRequestedFund()));
                        txtProposalStatus.setText(pr.getProposalStatus());
                        txtComments.setText(pr.getComments());
                        return;
                    }

                }
            }
        }

    }

    public void updateBorrowerProposals() {
        int selectedRowIndex = tblProposals.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Proposal to Update Details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblProposals.getModel();
        Proposal prop = (Proposal) model.getValueAt(selectedRowIndex, 0);
        prop.setFunderId(txtFunderID.getText());
//        prop.getBorrower().getBorrowerId()txtBorrower.setText();
        prop.setComments(txtComments.getText());
        JOptionPane.showMessageDialog(this, "Updated Proposal Details");
        popBorrowerProposals();
    }

    public void deleteBorrowerProposals() {
        int selectedRowIndex = tblProposals.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Proposal to Delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblProposals.getModel();
        Proposal prop = (Proposal) model.getValueAt(selectedRowIndex, 0);
        for (Network n : system.getNetworkList()) {
            if (n.getNetworkName().equalsIgnoreCase("Boston")) {
                for (Proposal pr : n.getProposalDirectory().getProposalDirectory()) {
                    if (pr.getProposalId() == prop.getProposalId()) {
                        n.getProposalDirectory().getProposalDirectory().remove(pr);
                        JOptionPane.showMessageDialog(this, "Proposal Deleted Successfully");
                        popBorrowerProposals();
                        return;
                    }

                }
            }
        }

    }

    private void populateFundsGraph() {

        HashMap<String, Integer> datamap = system.TotalFundsDistribution();

        DefaultPieDataset dataset = new DefaultPieDataset();
        for (String ent : datamap.keySet()) {
            dataset.setValue(ent, datamap.get(ent));
//            dataset.setValue("cds", 40000);
            pieChart(dataset, "Funds Distribution");
//        }
        }
    }

    private void pieChart(DefaultPieDataset dataset, String tHeader) {
        JFreeChart chart = ChartFactory.createPieChart3D(
                tHeader, // Title
                dataset, // Dataset
                true, // Show Legend
                true, // Use tooltips
                false // Configure chart to generate URLs?
        );

//        JFreeChart chart1 = ChartFactory.createPieChart3D(
//        "abc", // Title
//        dataset, // Dataset
//        true, // Show Legend
//        true, // Use tooltips
//        false // Configure chart to generate URLs?
//        );
//        JFreeChart chart2 = ChartFactory.createPieChart3D(
//        "abc2", // Title
//        dataset, // Dataset
//        true, // Show Legend
//        true, // Use tooltips
//        false // Configure chart to generate URLs?
//        );
//        
//        JFreeChart chart3 = ChartFactory.createPieChart3D(
//        "abc3", // Title
//        dataset, // Dataset
//        true, // Show Legend
//        true, // Use tooltips
//        false // Configure chart to generate URLs?
//        );
        panelViewReport.removeAll();
        panelViewReport.setLayout(new java.awt.BorderLayout());
        ChartPanel CP = new ChartPanel(chart);
//        ChartPanel CP1 = new ChartPanel(chart1);
//        ChartPanel CP2 = new ChartPanel(chart2);

        panelViewReport.add(CP, BorderLayout.NORTH);
//        panelViewReport.add(CP1,BorderLayout.SOUTH);
//        panelViewReport.add(CP2,BorderLayout.EAST);
        panelViewReport.validate();
//        panelViewReport.setBounds(10,10,600,400);
//        CP.setBounds(panelViewReport.getVisibleRect());
//        panelViewReport.setSize(panelViewReport.getWidth(),panelViewReport.getHeight());
    }

    private void populateBusinessGraph() {
        HashMap<String, Integer> datamap = system.BusinessDistribution();

        DefaultPieDataset dataset = new DefaultPieDataset();
        for (String ent : datamap.keySet()) {
            dataset.setValue(ent, datamap.get(ent));
            pieChart1(dataset, "Business Distribution by Lenders And Government");
        }

    }

    private void pieChart1(DefaultPieDataset dataset, String tHeader) {
        JFreeChart chart = ChartFactory.createPieChart3D(
                tHeader, // Title
                dataset, // Dataset
                true, // Show Legend
                true, // Use tooltips
                false // Configure chart to generate URLs?
        );

//        panelViewReport.removeAll();
        panelViewReport.setLayout(new java.awt.BorderLayout());
        ChartPanel CP = new ChartPanel(chart);
//        ChartPanel CP1 = new ChartPanel(chart1);
//        ChartPanel CP2 = new ChartPanel(chart2);

        panelViewReport.add(CP, BorderLayout.SOUTH);
//        panelViewReport.add(CP1,BorderLayout.SOUTH);
//        panelViewReport.add(CP2,BorderLayout.EAST);
        panelViewReport.validate();
//        panelViewReport.setBounds(10,10,600,400);
//        CP.setBounds(panelViewReport.getVisibleRect());
//        panelViewReport.setSize(panelViewReport.getWidth(),panelViewReport.getHeight());
    }

}
